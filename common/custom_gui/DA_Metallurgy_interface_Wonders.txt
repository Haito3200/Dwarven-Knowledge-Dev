# ANBENNAR: this folder is arranged into the different interface files the GUI elements belong in. For mission/tag-specific GUI, please use zz_mission_content.txt



# The custom guiButtonType/instantTextBoxType/iconType must have a 'scripted = yes' line to work
#custom_button = {
#    name = custom_button_testing #Must match a scripted guiButtonType in a .gui file
#    potential = { } #Determines when the button is visible
#    trigger = { } #Determines when the button is clickable
#    effect = { } #Effect
#    tooltip = localisation_key #Can use customizable localisation
#    frame = {  #Can define multiple frame clauses
#        number = <int> #Which frame to use. Check dds files with multiple icons like icon_religion.dds
#        trigger = { } #First matched frame clause will be used.
#    }
#}

#custom_text_box = {
#    name = custom_text_testing #Must match a scripted instantTextBoxType in a .gui file
#    potential = { } #Determines when the text is visible
#    tooltip = localisation_key #Can use customizable localisation
#    #To localize it, use the name of the button as a key, can also use customizable localisation
#}

#custom_icon = {
#    name = custom_icon_testing #Must match a scripted iconType in a .gui file
#    potential = { } #Determines when the icon is visible
#    tooltip = localisation_key #Can use customizable localisation
#    frame = {  #Can define multiple frame clauses
#        number = <int> #Which frame to use. Check dds files with multiple icons like icon_religion.dds
#        trigger = { } #First matched frame clause will be used.
#    }
#}

#custom_shield = {
#    name = custom_button_testing #Must match a scripted guiButtonType in a .gui file
#    potential = { } #Determines when the shield is visible
#    trigger = { } #Determines when the shield is clickable
#    effect = { } #Effect for clicking
#    tooltip = localisation_key #Can use customizable localisation
#    global_event_target = <string> # Global event target name
#    open_country = <bool> #If clicking opens the country view
#}

##############################  Supported files with scopes ##############################
#   The Gui objects must be directly inside the specified window Gui element!
#   FROM is always the country that clicks
#   provinceview.gui:
#       province_window         (ROOT: Clicked province)
#       buildings_window        (ROOT: Clicked province)
#       state_window            (ROOT: Clicked province)
#   countrycourtview.gui:
#       countrycourtview        (ROOT = FROM)
#   countrygovernmentview.gui:
#       countrygovernmentview   (ROOT = FROM)
#   countrydiplomacyview.gui:
#       countrydiplimacyview    (ROOT: Selected country)
#   countryeconomyview.gui:
#       countryeconomyview      (ROOT = FROM)
#   countrytradeview.gui:
#       countrytradeview        (ROOT = FROM)
#   countrytechnologyview.gui:
#       countrytechnologyview   (ROOT = FROM)
#   countryideasview.gui:
#       countryideasview        (ROOT = FROM)
#   countrymissionsview.gui:
#       countrymissionsview     (ROOT: Selected country)
#   countrydecisionview.gui:
#       countrydecisionsview    (ROOT = FROM)
#   countrystabilityview.gui:
#       countrystabilityview    (ROOT = FROM)
#   countryreligionview.gui:
#       countryreligionview     (ROOT = FROM)
#   countrymilitaryview.gui:
#       countrymilitaryview     (ROOT = FROM)
#   countrysubjectsview.gui:
#       countrysubjectview      (ROOT = FROM)
#   countryestatesview.gui:
#       countryestatesview      (ROOT = FROM)
#   ages_view.gui:
#       ages_view               (ROOT = FROM)
#   tradeinterface.gui:
#       TradeNodeInterface      (ROOT: Trade capital of a trade node)
#   hre.gui:
#       hre_window              (ROOT = FROM)
#   papacy.gui:
#       papacy_window           (ROOT = FROM)
#   faction.gui:
#       All faction windows     (ROOT = FROM)
#   celestialempireview.gui:
#       celestial_window        (ROOT = FROM)
#   countrynativesview.gui:
#       natives_window          (ROOT = FROM)
#   religiousreforms.gui:
#       reforms_window          (ROOT = FROM)
#   parliament.gui:
#       parliament_window       (ROOT = FROM)
custom_window = {
    name = DA_Metallurgy_interface_Wonders
    potential = {
        has_country_flag = DA_Metallurgy_interface_on_wonders
    }
}
custom_icon = {
    name = DA_Dwarven_Wonders_Background
    potential = {
        always = yes
    }
}

custom_icon = {
    name = DA_Dwarven_Wonder_Basic_Interface
    potential = {
		always = yes
    }
}

# first column


custom_button = {
	name = DA_Wonder_interaction_button_1
	tooltip = DA_Wonder_interaction_button_1_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			4039 = {
				has_great_project = {
					type = DA_Magma_Forge
				}
			}
		}
	}
	effect = {
		set_country_flag = DA_show_wonder_magma_forge
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_1_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_1_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_2
	tooltip = DA_Wonder_interaction_button_2_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			4217 = {
				has_great_project = {
					type = DA_Titanium_Vault
				}
			}
		}
	}
	effect = {
		set_country_flag = DA_show_wonder_Titanium_Vault
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_2_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_2_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_3
	tooltip = DA_Wonder_interaction_button_3_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			4284 = {
				has_great_project = {
					type = DA_Argrastun_Cathedral
				}
			}
		}
	}
	effect = {
		set_country_flag = DA_show_wonder_Argrastun_Cathedral
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_3_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_3_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_4
	tooltip = DA_Wonder_interaction_button_4_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_4_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_4_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_5
	tooltip = DA_Wonder_interaction_button_5_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_5_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_5_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}


custom_button = {
	name = DA_Wonder_interaction_button_6
	tooltip = DA_Wonder_interaction_button_6_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_6_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_6_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}


custom_button = {
	name = DA_Wonder_interaction_button_7
	tooltip = DA_Wonder_interaction_button_7_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_7_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_7_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}


custom_button = {
	name = DA_Wonder_interaction_button_8
	tooltip = DA_Wonder_interaction_button_8_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_8_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_8_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}



# second column


custom_button = {
	name = DA_Wonder_interaction_button_21
	tooltip = DA_Wonder_interaction_button_21_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_21_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_21_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_22
	tooltip = DA_Wonder_interaction_button_22_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_22_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_22_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_23
	tooltip = DA_Wonder_interaction_button_23_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_23_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_23_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_24
	tooltip = DA_Wonder_interaction_button_24_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_24_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_24_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_25
	tooltip = DA_Wonder_interaction_button_25_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_25_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_25_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_26
	tooltip = DA_Wonder_interaction_button_26_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_26_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_26_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_27
	tooltip = DA_Wonder_interaction_button_27_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_27_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_27_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Wonder_interaction_button_28
	tooltip = DA_Wonder_interaction_button_28_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonders_built_or_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Wonder_interaction_button_28_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Wonder_interaction_button_28_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

