# ANBENNAR: this folder is arranged into the different interface files the GUI elements belong in. For mission/tag-specific GUI, please use zz_mission_content.txt



# The custom guiButtonType/instantTextBoxType/iconType must have a 'scripted = yes' line to work
#custom_button = {
#    name = custom_button_testing #Must match a scripted guiButtonType in a .gui file
#    potential = { } #Determines when the button is visible
#    trigger = { } #Determines when the button is clickable
#    effect = { } #Effect
#    tooltip = localisation_key #Can use customizable localisation
#    frame = {  #Can define multiple frame clauses
#        number = <int> #Which frame to use. Check dds files with multiple icons like icon_religion.dds
#        trigger = { } #First matched frame clause will be used.
#    }
#}

#custom_text_box = {
#    name = custom_text_testing #Must match a scripted instantTextBoxType in a .gui file
#    potential = { } #Determines when the text is visible
#    tooltip = localisation_key #Can use customizable localisation
#    #To localize it, use the name of the button as a key, can also use customizable localisation
#}

#custom_icon = {
#    name = custom_icon_testing #Must match a scripted iconType in a .gui file
#    potential = { } #Determines when the icon is visible
#    tooltip = localisation_key #Can use customizable localisation
#    frame = {  #Can define multiple frame clauses
#        number = <int> #Which frame to use. Check dds files with multiple icons like icon_religion.dds
#        trigger = { } #First matched frame clause will be used.
#    }
#}

#custom_shield = {
#    name = custom_button_testing #Must match a scripted guiButtonType in a .gui file
#    potential = { } #Determines when the shield is visible
#    trigger = { } #Determines when the shield is clickable
#    effect = { } #Effect for clicking
#    tooltip = localisation_key #Can use customizable localisation
#    global_event_target = <string> # Global event target name
#    open_country = <bool> #If clicking opens the country view
#}

##############################  Supported files with scopes ##############################
#   The Gui objects must be directly inside the specified window Gui element!
#   FROM is always the country that clicks
#   provinceview.gui:
#       province_window         (ROOT: Clicked province)
#       buildings_window        (ROOT: Clicked province)
#       state_window            (ROOT: Clicked province)
#   countrycourtview.gui:
#       countrycourtview        (ROOT = FROM)
#   countrygovernmentview.gui:
#       countrygovernmentview   (ROOT = FROM)
#   countrydiplomacyview.gui:
#       countrydiplimacyview    (ROOT: Selected country)
#   countryeconomyview.gui:
#       countryeconomyview      (ROOT = FROM)
#   countrytradeview.gui:
#       countrytradeview        (ROOT = FROM)
#   countrytechnologyview.gui:
#       countrytechnologyview   (ROOT = FROM)
#   countryideasview.gui:
#       countryideasview        (ROOT = FROM)
#   countrymissionsview.gui:
#       countrymissionsview     (ROOT: Selected country)
#   countrydecisionview.gui:
#       countrydecisionsview    (ROOT = FROM)
#   countrystabilityview.gui:
#       countrystabilityview    (ROOT = FROM)
#   countryreligionview.gui:
#       countryreligionview     (ROOT = FROM)
#   countrymilitaryview.gui:
#       countrymilitaryview     (ROOT = FROM)
#   countrysubjectsview.gui:
#       countrysubjectview      (ROOT = FROM)
#   countryestatesview.gui:
#       countryestatesview      (ROOT = FROM)
#   ages_view.gui:
#       ages_view               (ROOT = FROM)
#   tradeinterface.gui:
#       TradeNodeInterface      (ROOT: Trade capital of a trade node)
#   hre.gui:
#       hre_window              (ROOT = FROM)
#   papacy.gui:
#       papacy_window           (ROOT = FROM)
#   faction.gui:
#       All faction windows     (ROOT = FROM)
#   celestialempireview.gui:
#       celestial_window        (ROOT = FROM)
#   countrynativesview.gui:
#       natives_window          (ROOT = FROM)
#   religiousreforms.gui:
#       reforms_window          (ROOT = FROM)
#   parliament.gui:
#       parliament_window       (ROOT = FROM)







# magma forge


custom_window = {
    name = DA_Argrastun_Cathedral_Window
    potential = {
        has_country_flag = DA_Metallurgy_interface_on_wonders
        has_country_flag = DA_show_wonder_Argrastun_Cathedral
    }
}

custom_button = {
	name = DA_close_button_Argrastun_Cathedral
	tooltip = DA_close_button_Argrastun_Cathedral_tt
	potential = {
		always = yes
	}
	trigger = {
		always = yes
	}
	effect = {
		clr_country_flag = DA_show_wonder_Argrastun_Cathedral
	}
}

custom_icon = {
    name = DA_Argrastun_Cathedral_Wonder_image
    potential = {
		always = yes
    }
}

custom_text_box = {
    name = DA_Argrastun_Cathedral_name_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Argrastun_Cathedral_name_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_text_box = {
    name = DA_Argrastun_Cathedral_dwarven_name_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Argrastun_Cathedral_dwarven_name_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Argrastun_Cathedral_upgrade_button
	tooltip = DA_Argrastun_Cathedral_upgrade_button_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Argrastun_Cathedral_in_use }
		}
		4284 = {
			owned_by = prev
			has_great_project = {
				type = DA_Argrastun_Cathedral
				tier = 0
			}
		}
		if = {
			limit = {
				4284 = {
					AND = {
						has_great_project = {
							type = DA_Argrastun_Cathedral
							tier = 0
						}
						NOT = { has_great_project = { type = DA_Argrastun_Cathedral tier = 1 } }
					}
				}
			}
			4284 = {
				custom_trigger_tooltip = {
					tooltip = DA_tooltip_has_dig_level_4_or_higher
					DA_has_dig_level_4_or_higher = yes
				}
			}
			DA_enchanted_building_material_total_required = {
				amount = 5
			}
			DA_arcane_metal_total_required = {
				amount = 5
			}
			treasury = 1600
		}
		if = {
			limit = {
				4284 = {
					AND = {
						has_great_project = {
							type = DA_Argrastun_Cathedral
							tier = 1
						}
						NOT = { has_great_project = { type = DA_Argrastun_Cathedral tier = 2 } }
					}
				}
			}
			4284 = {
				custom_trigger_tooltip = {
					tooltip = DA_tooltip_has_dig_level_6_or_higher
					DA_has_dig_level_6_or_higher = yes
				}
			}
			DA_enchanted_building_material_total_required = {
				amount = 20
			}
			DA_arcane_metal_total_required = {
				amount = 20
			}
			treasury = 3750
		}
		if = {
			limit = {
				4284 = {
					AND = {
						has_great_project = {
							type = DA_Argrastun_Cathedral
							tier = 2
						}
						NOT = { has_great_project = { type = DA_Argrastun_Cathedral tier = 3 } }
					}
				}
			}
			4284 = {
				custom_trigger_tooltip = {
					tooltip = DA_tooltip_has_dig_level_8_or_higher
					DA_has_dig_level_8_or_higher = yes
				}
			}
			DA_enchanted_building_material_total_required = {
				amount = 40
			}
			DA_arcane_metal_total_required = {
				amount = 40
			}
			treasury = 7500
		}
		if = {
			limit = {
				4284 = {
					has_great_project = {
						type = DA_Argrastun_Cathedral
						tier = 3
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = DA_Maxed_wonder_tt
				always = no
			}
		}
	}
	effect = {
		if = {
			limit = {
				4284 = {
					AND = {
						has_great_project = {
							type = DA_Argrastun_Cathedral
							tier = 0
						}
						NOT = { has_great_project = { type = DA_Argrastun_Cathedral tier = 1 } }
					}
				}
			}
			DA_enchanted_building_material_spend = {
				amount = 5
			}
			DA_arcane_metal_spend = {
				amount = 5
			}
			add_treasury = -1600
			4284 = {
				add_great_project_tier = {
					type = DA_Argrastun_Cathedral
					tier = 1
				}
			}
			hidden_effect = {
				country_event = {
					id = DA_Argrastun_Cathedral_event.11
					days = 365
				}
				country_event = {
					id = DA_Argrastun_Cathedral_event.12
					days = 1095
				}
			}
		}
		else_if = {
			limit = {
				4284 = {
					AND = {
						has_great_project = {
							type = DA_Argrastun_Cathedral
							tier = 1
						}
						NOT = { has_great_project = { type = DA_Argrastun_Cathedral tier = 2 } }
					}
				}
			}
			DA_enchanted_building_material_spend = {
				amount = 20
			}
			DA_arcane_metal_spend = {
				amount = 20
			}
			add_treasury = -3750
			4284 = {
				add_great_project_tier = {
					type = DA_Argrastun_Cathedral
					tier = 1
				}
			}
		}
		else_if = {
			limit = {
				4284 = {
					AND = {
						has_great_project = {
							type = DA_Argrastun_Cathedral
							tier = 2
						}
						NOT = { has_great_project = { type = DA_Argrastun_Cathedral tier = 3 } }
					}
				}
			}
			DA_enchanted_building_material_spend = {
				amount = 40
			}
			DA_arcane_metal_spend = {
				amount = 40
			}
			add_treasury = -7500
			4284 = {
				add_great_project_tier = {
					type = DA_Argrastun_Cathedral
					tier = 1
				}
			}
			hidden_effect = {
				country_event = {
					id = DA_Argrastun_Cathedral_event.14
					days = 3650
				}
			}
		}
	}
}

custom_text_box = {
    name = DA_Argrastun_Cathedral_Wonder_level_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Argrastun_Cathedral_Wonder_level_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_text_box = {
    name = DA_Argrastun_Cathedral_Wonder_location_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Argrastun_Cathedral_Wonder_location_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Argrastun_Cathedral_button_1
	tooltip = DA_Argrastun_Cathedral_button_1_tt
	potential = {
		4284 = {
			has_province_flag = DA_Argrastun_Cathedral_found_secondary_shrine_1
		}
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Argrastun_Cathedral_in_use }
		}
		4284 = {
			has_great_project = {
				type = DA_Argrastun_Cathedral
				tier = 1
			}
		}
		DA_enchanted_building_material_total_required = {
			amount = 5
		}
		treasury = 350
	}
	effect = {
		DA_enchanted_building_material_spend = {
			amount = 5
		}
		add_treasury = -350
		country_event = {
			id = DA_Hold_Ovdal_Az_An.1
		}
	}
}

custom_button = {
	name = DA_Argrastun_Cathedral_button_2
	tooltip = DA_Argrastun_Cathedral_button_2_tt
	potential = {
		4284 = {
			has_province_flag = DA_Argrastun_Cathedral_found_secondary_shrine_2
		}
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Argrastun_Cathedral_in_use }
		}
		4284 = {
			has_great_project = {
				type = DA_Argrastun_Cathedral
				tier = 1
			}
		}
		DA_enchanted_building_material_total_required = {
			amount = 5
		}
		treasury = 350
	}
	effect = {
		DA_enchanted_building_material_spend = {
			amount = 5
		}
		add_treasury = -350
		country_event = {
			id = DA_Hold_Ovdal_Az_An.2
		}
	}
}

custom_button = {
	name = DA_Argrastun_Cathedral_button_3
	tooltip = DA_Argrastun_Cathedral_button_3_tt
	potential = {
		4284 = {
			has_province_flag = DA_Argrastun_Cathedral_found_Main_Cathedral
		}
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Argrastun_Cathedral_in_use }
		}
		4284 = {
			has_great_project = {
				type = DA_Argrastun_Cathedral
				tier = 2
			}
		}
		DA_enchanted_building_material_total_required = {
			amount = 15
		}
		treasury = 1000
	}
	effect = {
		DA_enchanted_building_material_spend = {
			amount = 15
		}
		add_treasury = -1000
		country_event = {
			id = DA_Hold_Ovdal_Az_An.3
		}
	}
}

custom_button = {
	name = DA_Argrastun_Cathedral_button_4
	tooltip = DA_Argrastun_Cathedral_button_4_tt
	potential = {
		4284 = {
			has_province_flag = DA_restored_MF
		}
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Argrastun_Cathedral_in_use }
		}
		4284 = {
			has_great_project = {
				type = DA_Argrastun_Cathedral
				tier = 3
			}
		}
	}
	effect = {
		#country_event = {
		#	id = DA_Argrastun_Cathedral_event.4
		#}
	}
}
