# ANBENNAR: this folder is arranged into the different interface files the GUI elements belong in. For mission/tag-specific GUI, please use zz_mission_content.txt



# The custom guiButtonType/instantTextBoxType/iconType must have a 'scripted = yes' line to work
#custom_button = {
#    name = custom_button_testing #Must match a scripted guiButtonType in a .gui file
#    potential = { } #Determines when the button is visible
#    trigger = { } #Determines when the button is clickable
#    effect = { } #Effect
#    tooltip = localisation_key #Can use customizable localisation
#    frame = {  #Can define multiple frame clauses
#        number = <int> #Which frame to use. Check dds files with multiple icons like icon_religion.dds
#        trigger = { } #First matched frame clause will be used.
#    }
#}

#custom_text_box = {
#    name = custom_text_testing #Must match a scripted instantTextBoxType in a .gui file
#    potential = { } #Determines when the text is visible
#    tooltip = localisation_key #Can use customizable localisation
#    #To localize it, use the name of the button as a key, can also use customizable localisation
#}

#custom_icon = {
#    name = custom_icon_testing #Must match a scripted iconType in a .gui file
#    potential = { } #Determines when the icon is visible
#    tooltip = localisation_key #Can use customizable localisation
#    frame = {  #Can define multiple frame clauses
#        number = <int> #Which frame to use. Check dds files with multiple icons like icon_religion.dds
#        trigger = { } #First matched frame clause will be used.
#    }
#}

#custom_shield = {
#    name = custom_button_testing #Must match a scripted guiButtonType in a .gui file
#    potential = { } #Determines when the shield is visible
#    trigger = { } #Determines when the shield is clickable
#    effect = { } #Effect for clicking
#    tooltip = localisation_key #Can use customizable localisation
#    global_event_target = <string> # Global event target name
#    open_country = <bool> #If clicking opens the country view
#}

##############################  Supported files with scopes ##############################
#   The Gui objects must be directly inside the specified window Gui element!
#   FROM is always the country that clicks
#   provinceview.gui:
#       province_window         (ROOT: Clicked province)
#       buildings_window        (ROOT: Clicked province)
#       state_window            (ROOT: Clicked province)
#   countrycourtview.gui:
#       countrycourtview        (ROOT = FROM)
#   countrygovernmentview.gui:
#       countrygovernmentview   (ROOT = FROM)
#   countrydiplomacyview.gui:
#       countrydiplimacyview    (ROOT: Selected country)
#   countryeconomyview.gui:
#       countryeconomyview      (ROOT = FROM)
#   countrytradeview.gui:
#       countrytradeview        (ROOT = FROM)
#   countrytechnologyview.gui:
#       countrytechnologyview   (ROOT = FROM)
#   countryideasview.gui:
#       countryideasview        (ROOT = FROM)
#   countrymissionsview.gui:
#       countrymissionsview     (ROOT: Selected country)
#   countrydecisionview.gui:
#       countrydecisionsview    (ROOT = FROM)
#   countrystabilityview.gui:
#       countrystabilityview    (ROOT = FROM)
#   countryreligionview.gui:
#       countryreligionview     (ROOT = FROM)
#   countrymilitaryview.gui:
#       countrymilitaryview     (ROOT = FROM)
#   countrysubjectsview.gui:
#       countrysubjectview      (ROOT = FROM)
#   countryestatesview.gui:
#       countryestatesview      (ROOT = FROM)
#   ages_view.gui:
#       ages_view               (ROOT = FROM)
#   tradeinterface.gui:
#       TradeNodeInterface      (ROOT: Trade capital of a trade node)
#   hre.gui:
#       hre_window              (ROOT = FROM)
#   papacy.gui:
#       papacy_window           (ROOT = FROM)
#   faction.gui:
#       All faction windows     (ROOT = FROM)
#   celestialempireview.gui:
#       celestial_window        (ROOT = FROM)
#   countrynativesview.gui:
#       natives_window          (ROOT = FROM)
#   religiousreforms.gui:
#       reforms_window          (ROOT = FROM)
#   parliament.gui:
#       parliament_window       (ROOT = FROM)







# magma forge


custom_window = {
    name = DA_Titanium_Vault_Window
    potential = {
        has_country_flag = DA_Metallurgy_interface_on_wonders
        has_country_flag = DA_show_wonder_Titanium_Vault
    }
}

custom_button = {
	name = DA_close_button_Titanium_Vault
	tooltip = DA_close_button_Titanium_Vault_tt
	potential = {
		always = yes
	}
	trigger = {
		always = yes
	}
	effect = {
		clr_country_flag = DA_show_wonder_Titanium_Vault
		clr_country_flag = DA_Titanium_Vault_Reliquary_Window_on
	}
}

custom_icon = {
    name = DA_Titanium_Vault_Wonder_image
    potential = {
		always = yes
    }
}

custom_text_box = {
    name = DA_Titanium_Vault_name_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_name_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_text_box = {
    name = DA_Titanium_Vault_dwarven_name_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_dwarven_name_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_upgrade_button
	tooltip = DA_Titanium_Vault_upgrade_button_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Titanium_Vault_in_use }
		}
		custom_trigger_tooltip = {
			tooltip = DA_Titanium_Vault_completed_Antidote_tt
			has_country_flag = DA_Titanium_Vault_completed_Antidote
		}
		4217 = {
			owned_by = prev
			has_great_project = {
				type = DA_Titanium_Vault
				tier = 0
			}
		}
		if = {
			limit = {
				4217 = {
					AND = {
						has_great_project = {
							type = DA_Titanium_Vault
							tier = 0
						}
						NOT = { has_great_project = { type = DA_Titanium_Vault tier = 1 } }
					}
				}
			}
			4217 = {
				custom_trigger_tooltip = {
					tooltip = DA_tooltip_has_dig_level_4_or_higher
					DA_has_dig_level_4_or_higher = yes
				}
			}
			DA_alchemy_reagents_total_required = {
				amount = 5
			}
			DA_enchanted_building_material_total_required = {
				amount = 5
			}
			DA_arcane_metal_total_required = {
				amount = 5
			}
			treasury = 1600
		}
		if = {
			limit = {
				4217 = {
					AND = {
						has_great_project = {
							type = DA_Titanium_Vault
							tier = 1
						}
						NOT = { has_great_project = { type = DA_Titanium_Vault tier = 2 } }
					}
				}
			}
			4217 = {
				custom_trigger_tooltip = {
					tooltip = DA_tooltip_has_dig_level_6_or_higher
					DA_has_dig_level_6_or_higher = yes
				}
			}
			DA_alchemy_reagents_total_required = {
				amount = 20
			}
			DA_enchanted_building_material_total_required = {
				amount = 20
			}
			DA_arcane_metal_total_required = {
				amount = 20
			}
			treasury = 3750
		}
		if = {
			limit = {
				4217 = {
					AND = {
						has_great_project = {
							type = DA_Titanium_Vault
							tier = 2
						}
						NOT = { has_great_project = { type = DA_Titanium_Vault tier = 3 } }
					}
				}
			}
			4217 = {
				custom_trigger_tooltip = {
					tooltip = DA_tooltip_has_dig_level_8_or_higher
					DA_has_dig_level_8_or_higher = yes
				}
			}
			DA_alchemy_reagents_total_required = {
				amount = 40
			}
			DA_enchanted_building_material_total_required = {
				amount = 40
			}
			DA_arcane_metal_total_required = {
				amount = 40
			}
			treasury = 7500
		}
		if = {
			limit = {
				4217 = {
					has_great_project = {
						type = DA_Titanium_Vault
						tier = 3
					}
				}
			}
			custom_trigger_tooltip = {
				tooltip = DA_Maxed_wonder_tt
				always = no
			}
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					AND = {
						has_great_project = {
							type = DA_Titanium_Vault
							tier = 0
						}
						NOT = { has_great_project = { type = DA_Titanium_Vault tier = 1 } }
					}
				}
			}
			DA_alchemy_reagents_spend = {
				amount = 5
			}
			DA_enchanted_building_material_spend = {
				amount = 5
			}
			DA_arcane_metal_spend = {
				amount = 5
			}
			add_treasury = -1600
			4217 = {
				add_great_project_tier = {
					type = DA_Titanium_Vault
					tier = 1
				}
			}
			hidden_effect = {
				country_event = {
					id = DA_Titanium_Vault_event.11
					days = 365
				}
				country_event = {
					id = DA_Titanium_Vault_event.12
					days = 1095
				}
			}
		}
		else_if = {
			limit = {
				4217 = {
					AND = {
						has_great_project = {
							type = DA_Titanium_Vault
							tier = 1
						}
						NOT = { has_great_project = { type = DA_Titanium_Vault tier = 2 } }
					}
				}
			}
			DA_alchemy_reagents_spend = {
				amount = 20
			}
			DA_enchanted_building_material_spend = {
				amount = 20
			}
			DA_arcane_metal_spend = {
				amount = 20
			}
			add_treasury = -3750
			4217 = {
				add_great_project_tier = {
					type = DA_Titanium_Vault
					tier = 1
				}
			}
		}
		else_if = {
			limit = {
				4217 = {
					AND = {
						has_great_project = {
							type = DA_Titanium_Vault
							tier = 2
						}
						NOT = { has_great_project = { type = DA_Titanium_Vault tier = 3 } }
					}
				}
			}
			DA_alchemy_reagents_spend = {
				amount = 40
			}
			DA_enchanted_building_material_spend = {
				amount = 40
			}
			DA_arcane_metal_spend = {
				amount = 40
			}
			add_treasury = -7500
			4217 = {
				add_great_project_tier = {
					type = DA_Titanium_Vault
					tier = 1
				}
			}
			hidden_effect = {
				country_event = {
					id = DA_Titanium_Vault_event.14
					days = 3650
				}
			}
		}
	}
}

custom_text_box = {
    name = DA_Titanium_Vault_Wonder_level_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Wonder_level_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_text_box = {
    name = DA_Titanium_Vault_Wonder_location_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Wonder_location_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_button_Antidote
	tooltip = DA_Titanium_Vault_button_Antidote_tt
	potential = {
		NOT = {
			has_country_flag = DA_Titanium_Vault_completed_Antidote
		}
		4217 = {
			has_province_flag = DA_Titanium_Vault_found
		}
	}
	trigger = {
		treasury = 2000
		custom_trigger_tooltip = {
			tooltip = DA_has_12_ADK
			check_variable = {
				which = ancientDwarvenKnowledge
				value = 12
			}
		}
		NOT = { has_country_modifier = DA_Titanium_Vault_researching_Antidote }
	}
	effect = {
		add_treasury = -2000
		custom_tooltip = DA_cost_12_ADK
		hidden_effect = { subtract_variable = { ancientDwarvenKnowledge = 12 } }
		add_country_modifier = {
			name = DA_Titanium_Vault_researching_Antidote
			duration = -1
		}
		hidden_effect = {
			country_event = {
				id = DA_Hold_Gor_Vazumbrog.1
				days = 3650
			}
		}
	}
}

custom_button = {
	name = DA_Titanium_Vault_button_1
	tooltip = DA_Titanium_Vault_button_1_tt
	potential = {
		has_country_flag = DA_Titanium_Vault_completed_Antidote
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Titanium_Vault_in_use }
		}
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_Titanium_NOT_already_prepared_expedition_tt
			NOT = { has_country_flag = DA_Wonder_Titanium_prepared_expedition_1 }
			NOT = { has_country_flag = DA_Wonder_Titanium_prepared_expedition_2 }
			NOT = { has_country_flag = DA_Wonder_Titanium_prepared_expedition_3 }
			NOT = { has_country_flag = DA_Wonder_Titanium_prepared_expedition_4 }
			NOT = { has_country_flag = DA_Wonder_Titanium_prepared_expedition_5 }
		}
		4217 = {
			has_great_project = {
				type = DA_Titanium_Vault
				tier = 1
			}
		}
		DA_alchemy_reagents_total_required = {
			amount = 5
		}
		treasury = 100
		manpower = 5
		adm_power = 10
		mil_power = 10
	}
	effect = {
		country_event = {
			id = DA_Hold_Gor_Vazumbrog.2
		}
	}
}

custom_button = {
	name = DA_Titanium_Vault_button_2
	tooltip = DA_Titanium_Vault_button_2_tt
	potential = {
		has_country_flag = DA_Titanium_Vault_completed_Antidote
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Titanium_Vault_in_use }
		}
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_Titanium_already_prepared_expedition_tt
			OR = {
				has_country_flag = DA_Wonder_Titanium_prepared_expedition_1
				has_country_flag = DA_Wonder_Titanium_prepared_expedition_2
				has_country_flag = DA_Wonder_Titanium_prepared_expedition_3
				has_country_flag = DA_Wonder_Titanium_prepared_expedition_4
				has_country_flag = DA_Wonder_Titanium_prepared_expedition_5
			}
		}
		4217 = {
			has_great_project = {
				type = DA_Titanium_Vault
				tier = 1
			}
			custom_trigger_tooltip = {
				tooltip = DA_Wonder_Titanium_NO_expedition_in_progress_tt
				NOT = {
					OR = {
						has_province_flag = DA_Wonder_Titanium_expedition_in_progress_1
						has_province_flag = DA_Wonder_Titanium_expedition_in_progress_2
						has_province_flag = DA_Wonder_Titanium_expedition_in_progress_3
					}			
				}
			}
		}
	}
	effect = {
		country_event = {
			id = DA_Hold_Gor_Vazumbrog.3
		}
	}
}

custom_button = {
	name = DA_Titanium_Vault_button_3
	tooltip = DA_Titanium_Vault_button_3_tt
	potential = {
		has_country_flag = DA_Titanium_Vault_completed_Antidote
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Titanium_Vault_in_use }
		}
		4217 = {
			has_great_project = {
				type = DA_Titanium_Vault
				tier = 2
			}
		}
	}
	effect = {
		set_country_flag = DA_Titanium_Vault_Reliquary_Window_on
	}
}

custom_button = {
	name = DA_Titanium_Vault_button_4
	tooltip = DA_Titanium_Vault_button_4_tt
	potential = {
		has_country_flag = DA_Titanium_Vault_completed_Antidote
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Titanium_Vault_in_use }
		}
		4217 = {
			has_great_project = {
				type = DA_Titanium_Vault
				tier = 3
			}
		}
		custom_trigger_tooltip = {
			tooltip = DA_Titanium_Vault_already_selected_order
			NOT = { has_country_modifier = DA_Wonder_Titanium_Order.Dauvek_Veker }
			NOT = { has_country_modifier = DA_Wonder_Titanium_Order.Arm_of_Krummul }
			NOT = { has_country_modifier = DA_Wonder_Titanium_Order.Vaultwardens }
		}
		DA_alchemy_reagents_total_required = {
			amount = 25
		}
		DA_enchanted_building_material_total_required = {
			amount = 25
		}
		DA_arcane_metal_total_required = {
			amount = 25
		}
		treasury = 3000
	}
	effect = {
		DA_alchemy_reagents_spend = {
			amount = 25
		}
		DA_enchanted_building_material_spend = {
			amount = 25
		}
		DA_arcane_metal_spend = {
			amount = 25
		}
		add_treasury = -3000
		country_event = {
			id = DA_Hold_Gor_Vazumbrog.4
		}
	}
}

custom_button = {
	name = DA_Titanium_Vault_button_5
	tooltip = DA_Titanium_Vault_button_5_tt
	potential = {
		has_country_flag = DA_Titanium_Vault_completed_Antidote
		4217 = {
			has_province_flag = DA_Titanium_Vault_found_Hunter_of_the_deeps
		}
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Wonder_in_use_tt
			NOT = { has_country_flag = DA_Wonder_Titanium_Vault_in_use }
		}
		4217 = {
			has_great_project = {
				type = DA_Titanium_Vault
				tier = 3
			}
		}
		custom_trigger_tooltip = {
			tooltip = DA_Titanium_Vault_found_Hunter_of_the_deeps_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_found_Hunter_of_the_deeps
			}
		}
		always = no
	}
	effect = {
	}
}


custom_window = {
    name = DA_Titanium_Vault_Reliquary_Window
    potential = {
        has_country_flag = DA_Titanium_Vault_Reliquary_Window_on
    }
}
custom_icon = {
    name = DA_Titanium_Vault_Reliquary_Interface
    potential = {
        always = yes
    }
}


# first column


custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_1
	tooltip = DA_Titanium_Vault_Reliquary_button_1_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.Eternity_Clock
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Eternity_Clock_sealed
				}
			}
			custom_trigger_tooltip = {
				tooltip = DA_Relic_sealed_or_used_tt
				always = no
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Eternity_Clock
				}
			}
			all_owned_province = {
				NOT = { has_province_modifier = DA_Eternity_Clock_province }
			}
			any_core_province = {
				owned_by = prev
				development = 15
				has_terrain = cavern
			}
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Eternity_Clock
				}
			}
			country_event = {
				id = DA_Hold_Gor_Vazumbrog.300
			}
		}
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_1_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_1_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_2
	tooltip = DA_Titanium_Vault_Reliquary_button_2_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.Earthshaper_Sphere
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Earthshaper_Sphere_sealed
				}
			}
			custom_trigger_tooltip = {
				tooltip = DA_Relic_sealed_or_used_tt
				always = no
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Earthshaper_Sphere
				}
			}
			any_owned_province = {
				has_terrain = cavern
				NOT = { development = 15 }
			}
			NOT =  { has_country_modifier = DA_Titanium_Vault_Earthshaper_Sphere_CD }
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Earthshaper_Sphere
				}
			}
			custom_tooltip = DA_Titanium_Vault_Relic.Earthshaper_Sphere_activation_tt
			hidden_effect = {
				random_list = {
					3 = {
						country_event = {
							id = DA_Hold_Gor_Vazumbrog.310
						}
					}
					5 = {
						country_event = {
							id = DA_Hold_Gor_Vazumbrog.311
						}
					}
					3 = {
						country_event = {
							id = DA_Hold_Gor_Vazumbrog.312
						}
					}
					1 = {
						country_event = {
							id = DA_Hold_Gor_Vazumbrog.313
						}
					}
				}
			}
		}
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_2_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_2_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_3
	tooltip = DA_Titanium_Vault_Reliquary_button_3_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.Codex_of_Infinite_Tactics
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Codex_of_Infinite_Tactics
				}
			}
			NOT = { has_country_modifier = DA_Codex_of_Infinite_Tactics_CD }
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Codex_of_Infinite_Tactics
				}
			}
			if = {
				limit = {
					NOT = { has_country_modifier = DA_Codex_of_Infinite_Tactics_Modifier }
				}
				add_country_modifier = {
					name = DA_Codex_of_Infinite_Tactics_Modifier
					duration = -1
				}
				custom_tooltip = DA_CD_10_tt
				hidden_effect = {
					add_country_modifier = {
						name = DA_Codex_of_Infinite_Tactics_CD
						duration = 3650
					}
				}
			}
			else = {
				remove_country_modifier = DA_Codex_of_Infinite_Tactics_Modifier
				custom_tooltip = DA_CD_10_tt
				hidden_effect = {
					add_country_modifier = {
						name = DA_Codex_of_Infinite_Tactics_CD
						duration = 3650
					}
				}
			}

		}
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_3_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_3_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_4
	tooltip = DA_Titanium_Vault_Reliquary_button_4_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.Crown_of_Dominion
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Crown_of_Dominion
				}
			}
			NOT = { has_country_modifier = DA_Crown_of_Dominion_CD }
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Crown_of_Dominion
				}
			}
			if = {
				limit = {
					NOT = { has_country_modifier = DA_Crown_of_Dominion_Modifier }
				}
				add_country_modifier = {
					name = DA_Crown_of_Dominion_Modifier
					duration = -1
				}
				custom_tooltip = DA_CD_10_tt
				hidden_effect = {
					add_country_modifier = {
						name = DA_Crown_of_Dominion_CD
						duration = 3650
					}
				}
			}
			else = {
				remove_country_modifier = DA_Crown_of_Dominion_Modifier
				custom_tooltip = DA_CD_10_tt
				hidden_effect = {
					add_country_modifier = {
						name = DA_Crown_of_Dominion_CD
						duration = 3650
					}
				}
			}

		}
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_4_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_4_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_5
	tooltip = DA_Titanium_Vault_Reliquary_button_5_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.RuneGold_Cache
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.RuneGold_Cache_sealed
				}
			}
			custom_trigger_tooltip = {
				tooltip = DA_Relic_sealed_or_used_tt
				always = no
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.RuneGold_Cache
				}
			}
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.RuneGold_Cache
				}
			}
			country_event = {
				id = DA_Hold_Gor_Vazumbrog.340
			}
			4217 = {
				set_province_flag = DA_Titanium_Vault_Relic.RuneGold_Cache_sealed
			}
		}
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_5_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_5_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}


custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_6
	tooltip = DA_Titanium_Vault_Reliquary_button_6_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.Algorithm_of_Eternity
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Algorithm_of_Eternity
				}
			}
			custom_trigger_tooltip = {
				tooltip = DA_Relic_sealed_or_used_tt
				always = no
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Algorithm_of_Eternity
				}
			}
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_6_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_6_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}


custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_7
	tooltip = DA_Titanium_Vault_Reliquary_button_7_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.Half_Burned_Journal
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Half_Burned_Journal_sealed
				}
			}
			custom_trigger_tooltip = {
				tooltip = DA_Relic_sealed_or_used_tt
				always = no
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Half_Burned_Journal
				}
			}
			all_owned_province = {
				NOT = { has_province_modifier = DA_Half_Burned_Journal_Expedition }
			}
			any_owned_province = {
				is_capital = no
				OR = {
					has_terrain = dwarven_hold
					has_terrain = dwarven_hold_surface
				}
			}
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Half_Burned_Journal
				}
			}
			country_event = {
				id = DA_Hold_Gor_Vazumbrog.360
			}
		}
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_7_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_7_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}


custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_8
	tooltip = DA_Titanium_Vault_Reliquary_button_8_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.Aetherium_Lingots
			}
		}
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Aetherium_Lingots
				}
			}
			custom_trigger_tooltip = {
				tooltip = DA_Aetherium_Lingots_1_or_more_trigger_tt
				4217 = {
					check_variable = {
						which = DA_Aetherium_Lingots
						value = 1
					}
				}
			}
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Aetherium_Lingots
				}
			}
			country_event = {
				id = DA_Hold_Gor_Vazumbrog.370
			}
		}
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_8_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_8_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}



# second column


custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_21
	tooltip = DA_Titanium_Vault_Reliquary_button_21_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			4217 = {
				has_province_flag = DA_Titanium_Vault_Relic.Runic_Heart
			}
		}
		if = {
			limit = {
				has_ruler_flag = DA_Titanium_Vault_Relic.Runic_Heart_in_use
			}
			custom_trigger_tooltip = {
				tooltip = DA_Relic_sealed_or_used_tt
				always = no
			}
		}
	}
	effect = {
		if = {
			limit = {
				4217 = {
					has_province_flag = DA_Titanium_Vault_Relic.Runic_Heart
				}
			}
			country_event = {
				id = DA_Hold_Gor_Vazumbrog.380
			}
		}
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_21_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_21_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_22
	tooltip = DA_Titanium_Vault_Reliquary_button_22_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_22_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_22_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_23
	tooltip = DA_Titanium_Vault_Reliquary_button_23_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_23_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_23_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_24
	tooltip = DA_Titanium_Vault_Reliquary_button_24_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_24_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_24_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_25
	tooltip = DA_Titanium_Vault_Reliquary_button_25_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_25_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_25_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_26
	tooltip = DA_Titanium_Vault_Reliquary_button_26_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_26_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_26_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_27
	tooltip = DA_Titanium_Vault_Reliquary_button_27_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_27_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_27_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Titanium_Vault_Reliquary_button_28
	tooltip = DA_Titanium_Vault_Reliquary_button_28_tt
	potential = {
		always = yes
	}
	trigger = {
		custom_trigger_tooltip = {
			tooltip = DA_Relic_found_tt
			always = no
		}
	}
	effect = {
	}
}
custom_text_box = {
    name = DA_Titanium_Vault_Reliquary_button_28_text #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Titanium_Vault_Reliquary_button_28_text_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

