# ANBENNAR: this folder is arranged into the different interface files the GUI elements belong in. For mission/tag-specific GUI, please use zz_mission_content.txt



# The custom guiButtonType/instantTextBoxType/iconType must have a 'scripted = yes' line to work
#custom_button = {
#    name = custom_button_testing #Must match a scripted guiButtonType in a .gui file
#    potential = { } #Determines when the button is visible
#    trigger = { } #Determines when the button is clickable
#    effect = { } #Effect
#    tooltip = localisation_key #Can use customizable localisation
#    frame = {  #Can define multiple frame clauses
#        number = <int> #Which frame to use. Check dds files with multiple icons like icon_religion.dds
#        trigger = { } #First matched frame clause will be used.
#    }
#}

#custom_text_box = {
#    name = custom_text_testing #Must match a scripted instantTextBoxType in a .gui file
#    potential = { } #Determines when the text is visible
#    tooltip = localisation_key #Can use customizable localisation
#    #To localize it, use the name of the button as a key, can also use customizable localisation
#}

#custom_icon = {
#    name = custom_icon_testing #Must match a scripted iconType in a .gui file
#    potential = { } #Determines when the icon is visible
#    tooltip = localisation_key #Can use customizable localisation
#    frame = {  #Can define multiple frame clauses
#        number = <int> #Which frame to use. Check dds files with multiple icons like icon_religion.dds
#        trigger = { } #First matched frame clause will be used.
#    }
#}

#custom_shield = {
#    name = custom_button_testing #Must match a scripted guiButtonType in a .gui file
#    potential = { } #Determines when the shield is visible
#    trigger = { } #Determines when the shield is clickable
#    effect = { } #Effect for clicking
#    tooltip = localisation_key #Can use customizable localisation
#    global_event_target = <string> # Global event target name
#    open_country = <bool> #If clicking opens the country view
#}

##############################  Supported files with scopes ##############################
#   The Gui objects must be directly inside the specified window Gui element!
#   FROM is always the country that clicks
#   provinceview.gui:
#       province_window         (ROOT: Clicked province)
#       buildings_window        (ROOT: Clicked province)
#       state_window            (ROOT: Clicked province)
#   countrycourtview.gui:
#       countrycourtview        (ROOT = FROM)
#   countrygovernmentview.gui:
#       countrygovernmentview   (ROOT = FROM)
#   countrydiplomacyview.gui:
#       countrydiplimacyview    (ROOT: Selected country)
#   countryeconomyview.gui:
#       countryeconomyview      (ROOT = FROM)
#   countrytradeview.gui:
#       countrytradeview        (ROOT = FROM)
#   countrytechnologyview.gui:
#       countrytechnologyview   (ROOT = FROM)
#   countryideasview.gui:
#       countryideasview        (ROOT = FROM)
#   countrymissionsview.gui:
#       countrymissionsview     (ROOT: Selected country)
#   countrydecisionview.gui:
#       countrydecisionsview    (ROOT = FROM)
#   countrystabilityview.gui:
#       countrystabilityview    (ROOT = FROM)
#   countryreligionview.gui:
#       countryreligionview     (ROOT = FROM)
#   countrymilitaryview.gui:
#       countrymilitaryview     (ROOT = FROM)
#   countrysubjectsview.gui:
#       countrysubjectview      (ROOT = FROM)
#   countryestatesview.gui:
#       countryestatesview      (ROOT = FROM)
#   ages_view.gui:
#       ages_view               (ROOT = FROM)
#   tradeinterface.gui:
#       TradeNodeInterface      (ROOT: Trade capital of a trade node)
#   hre.gui:
#       hre_window              (ROOT = FROM)
#   papacy.gui:
#       papacy_window           (ROOT = FROM)
#   faction.gui:
#       All faction windows     (ROOT = FROM)
#   celestialempireview.gui:
#       celestial_window        (ROOT = FROM)
#   countrynativesview.gui:
#       natives_window          (ROOT = FROM)
#   religiousreforms.gui:
#       reforms_window          (ROOT = FROM)
#   parliament.gui:
#       parliament_window       (ROOT = FROM)


custom_window = {
    name = DA_research_facility_interface
    potential = {
        has_country_flag = DA_Metallurgy_interface_on_research_facility
    }
}

# custom_icon = {
#     name = DA_research_facility_interface_icon #Must match a scripted iconType in a .gui file
#     potential = {
#         always = yes
#     }
# }
custom_text_box = {
    name = DA_title_Tech_buildings #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = "ArcaneTech Buildings" #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_artificial_mage_ruler_button
	tooltip = DA_Research_facility_menu.1.b.tooltip
	potential = {
        always = yes
	}
	trigger = {
		has_country_flag = DA_can_make_mage
		ruler_is_not_powerful_mage = yes
		treasury = 1000
        custom_trigger_tooltip = {
            tooltip = DA_has_10_ADK
		    check_variable = { ancientDwarvenKnowledge = 10 }
        }
	}
	effect = {
        hidden_effect = {
            country_event = {
                id = DA_adk.6
            }
        }
	}
}
custom_button = {
	name = DA_runic_grafting_button
	tooltip = DA_Research_facility_menu.1.c
	potential = {
        always = yes
	}
	trigger = {
		has_country_flag = DA_can_graft_new_runes
		type_is_studying_magic = { type = ruler }
		ruler_is_powerful_mage = yes
		treasury = 100
		NOT = {	has_country_modifier = DA_Graft_runes_cooldown }
        custom_trigger_tooltip = {
            tooltip = DA_has_5_ADK
		    check_variable = { ancientDwarvenKnowledge = 5 }
        }
	}
	effect = {
        hidden_effect = {
            country_event = {
                id = DA_adk.8
            }
        }
	}
}
custom_button = {
	name = DA_runic_leader_button
	tooltip = DA_Research_facility_menu.1.d
	potential = {
        always = yes
	}
	trigger = {
		has_country_flag = DA_Can_create_leaders
		treasury = 250
		mil_power = 50
        custom_trigger_tooltip = {
            tooltip = DA_has_5_ADK
		    check_variable = { ancientDwarvenKnowledge = 5 }
        }
	}
	effect = {
        hidden_effect = {
            country_event = {
                id = DA_adk.10
            }
        }
	}
}
custom_button = {
	name = DA_Fake_Capacity_button
	tooltip = DA_Fake_Capacity_button_tt
	potential = {
        always = yes
	}
	trigger = {
		always = yes
	}
	effect = {
        hidden_effect = {
            country_event = {
                id = DA_adk.150
            }
        }
	}
}

custom_text_box = {
    name = DA_Prod_Capacity_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Prod_Capacity_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Fake_Research_progress_button
	tooltip = DA_Fake_Research_progress_button_tt
	potential = {
        always = yes
	}
	trigger = {
		always = yes
	}
	effect = {
	}
}

custom_text_box = {
    name = DA_Research_progress_shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_Prod_Capacity_shower_tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_button = {
	name = DA_Runesmith_Menu_Button
	tooltip = DA_Runesmith_Menu_Button_tt
	potential = {
		always = yes
	}
	trigger = {
        culture_group = dwarven
        DA_has_RF_2_or_higher = yes
        NOT = { has_country_flag = DA_rf_menu_in_use }
	}
	effect = {
        hidden_effect = {
            country_event = {
                id = DA_Research_facility_menu.1
            }
        }
	}
}

custom_button = {
	name = DA_Runesmith_Research_Button
	tooltip = DA_Runesmith_Research_Button_tt
	potential = {
		always = yes
	}
    trigger = {
        custom_trigger_tooltip = {
            tooltip = DA_NO_Research_in_progress_tt
            NOT = { has_estate_privilege = DA_Runesmith_research_privilege }
            NOT = { has_country_modifier = DA_General_research_Mod }
        }
        if = {
            limit = {
				culture_group = dwarven
				capital_scope = {
					OR = {
						continent = serpentspine
						has_terrain = dwarven_hold
						has_terrain = dwarven_hold_surface
					}
				}
            }
            DA_has_RF_3_or_higher = yes
            custom_trigger_tooltip = {
                tooltip = DA_unlocked_production_System_tt
                has_country_flag = DA_unlocked_production_System
            }
        }
        else = {
            custom_trigger_tooltip = {
                tooltip = DA_Unlocked_Research_tt
                has_country_flag = DA_General_MT_part_2_enabled
            }
        }
    }
	effect = {
		add_adm_power = -10
		add_dip_power = -10
		add_mil_power = -10
        if = {
            limit = {
				culture_group = dwarven
				capital_scope = {
					OR = {
						continent = serpentspine
						has_terrain = dwarven_hold
						has_terrain = dwarven_hold_surface
					}
				}
            }
            country_event = {
                id = DA_Runesmiths_events.1
            }
            set_estate_privilege = DA_Runesmith_research_privilege
        }
        else = {
            country_event = {
                id = DA_General_Research_events.1
            }
            add_country_modifier = {
                name = DA_General_research_Mod
                duration = -1
            }
        }
	}
}

custom_button = {
	name = DA_Building_Menu_Button
	tooltip = DA_Building_Menu_Button_tt
	potential = {
		always = yes
	}
	trigger = {
        always = no
        culture_group = dwarven
        OR = {
            custom_trigger_tooltip = {
                tooltip = DA_unlocked_runeforged_forts_tt
                has_country_flag = DA_can_build_runeforged_fort
            }
            DA_completed.Magic_Theory_2 = yes
            DA_completed.Metallurgy_2 = yes
            DA_completed.Alchemy_2 = yes
            DA_completed.Mechanics_2 = yes
            DA_completed.Medicine_2 = yes
        }
	}
	effect = {
        hidden_effect = {
            country_event = {
                id = DA_Buildings_menu.1
            }
        }
	}
}

custom_button = {
	name = DA_Metallurgy_Menu_Button
	tooltip = DA_Metallurgy_Menu_Button_tt
	potential = {
		always = yes
	}
	trigger = {
        custom_trigger_tooltip = {
            tooltip = DA_not_doing_metallurgy_tt
            NOT = { has_country_flag = DA_redesigning_ARTIFICERtry }
            NOT = { has_country_flag = DA_redesigning_Infantry }
            NOT = { has_country_flag = DA_redesigning_Cavalry }
            NOT = { has_country_flag = DA_redesigning_Artillery }
        }
        custom_trigger_tooltip = {
            tooltip = DA_enabled_metallurgy_menu_tt
			OR = {
				has_country_flag = DA_enable_metallurgy_System
				has_country_flag = DA_enable_metallurgy_System_artificer
			}
        }

	}
	effect = {
		add_adm_power = -10
		add_dip_power = -10
		add_mil_power = -10
        hidden_effect = {
            country_event = {
                id = DA_Metallurgy_events.5
            }
        }
	}
}

custom_button = {
	name = DA_Exploration_Button
	tooltip = DA_Exploration_Button_tt
	potential = {
		always = yes
	}
	trigger = {
        OR = {
            culture_group = dwarven
            culture_group = goblin
            culture_group = kobold
        }
        custom_trigger_tooltip = {
            tooltip = DA_Has_unexplored_dig_level_tooltip
            NOT = { has_country_flag = DA_ADK_menu_in_use }
            OR = {
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_1_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_2 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 25
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_2_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_3 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 50
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_3_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_4 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 100
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_4_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_5 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 200
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_5_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_6 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 300
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_6_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_7 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 500
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_7_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_8 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 800
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_8_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_9 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 1200
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_9_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_10 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 2500
                    }
                }
                any_core_province = {
                    owned_by = root
                    DA_has_dig_level_10_or_higher = yes
                    NOT = { has_province_flag = DA_looked_dig_adk_11 }
                    NOT = { has_province_flag = DA_expedition_in_progress }
                    owner = {
                        treasury = 5000
                    }
                }
            }
        }
        custom_trigger_tooltip = {
            tooltip = DA_ADK_menu_CD_tt
            NOT = { has_country_flag = DA_ADK_menu_in_use }
            NOT = { has_country_modifier = DA_ADK_menu_cooldown }
        }
        custom_trigger_tooltip = {
            tooltip = DA_ADK_menu_Exp_in_progress_tt
            NOT = {
                any_owned_province = {
                    has_province_flag = DA_expedition_in_progress
                }
            }
        }
	}
	effect = {
        hidden_effect = {
            country_event = {
                id = DA_adk_hold_exploration_menu.1 
            }
        }
	}
}

custom_button = {
	name = DA_ADK_Disable_Button
	tooltip = DA_ADK_Disable_Button_tt
    frame = {  #Can define multiple frame clauses
        number = 1 #Which frame to use. Check dds files with multiple icons like icon_religion.dds
        trigger = {
            NOT = { has_country_flag = DA_Disabled_ADK_on_Click }
        } #First matched frame clause will be used.
    }
    frame = {  #Can define multiple frame clauses
        number = 2 #Which frame to use. Check dds files with multiple icons like icon_religion.dds
        trigger = {
            has_country_flag = DA_Disabled_ADK_on_Click
        } #First matched frame clause will be used.
    }
	potential = {
		always = yes
	}
	trigger = {
        always = yes
	}
	effect = {
        hidden_effect = {
            if = {
                limit = {
                    has_country_flag = DA_Disabled_ADK_on_Click
                }
                clr_country_flag = DA_Disabled_ADK_on_Click
            }
            else = {
                set_country_flag = DA_Disabled_ADK_on_Click
            }
        }
	}
}

custom_text_box = {
    name = DA_ADK_Shower #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_ADK_Shower.tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}

custom_text_box = {
    name = DA_material_Shower.alchemy_reagents #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_material_Shower.alchemy_reagents.tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}
custom_text_box = {
    name = DA_material_Shower.arcane_metal #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_material_Shower.arcane_metal.tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}
custom_text_box = {
    name = DA_material_Shower.enchanted_building_material #Must match a scripted instantTextBoxType in a .gui file
    potential = { always = yes } #Determines when the text is visible
    tooltip = DA_material_Shower.enchanted_building_material.tt #Can use customizable localisation
    #To localize it, use the name of the button as a key, can also use customizable localisation
}
