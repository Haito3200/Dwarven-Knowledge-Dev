DA_great_mage_creation_process = {
	hidden_effect = {
		set_ruler_flag = DA_artificial_mage
		set_ruler_flag = initialized_magic_flags
	}
	if = {
		limit = {
			has_country_flag = DA_can_make_mage
			NOT = { has_country_flag = DA_can_make_mage_t1 }
		}
		custom_tooltip = DA_adk.6.tt0
		hidden_effect = {
			DA_clear_ruler_personalities = yes
			add_ruler_personality = mage_personality
			random_list = { # talented in 3
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
		}
	}
	if = {
		limit = {
			has_country_flag = DA_can_make_mage_t1
			NOT = { has_country_flag = DA_can_make_mage_t2 }
		}
		custom_tooltip = DA_adk.6.tt1
		hidden_effect = {
			DA_clear_ruler_personalities = yes
			add_ruler_personality = mage_personality
			random_list = { # talented in 5
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
		}
	}
	if = {
		limit = {
			has_country_flag = DA_can_make_mage_t2
			NOT = { has_country_flag = DA_can_make_mage_t3 }
		}
		custom_tooltip = DA_adk.6.tt2
		hidden_effect = {
			DA_clear_ruler_personalities = yes
			add_ruler_personality = mage_personality
			random_list = { # renowned in 2
				1 = { set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 }
				1 = { set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 }
				1 = { set_ruler_flag = divination_1 set_ruler_flag = divination_2 }
				1 = { set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 }
				1 = { set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 }
				1 = { set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 }
				1 = { set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 }
				1 = { set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 set_ruler_flag = divination_2 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 }
			}

			random_list = { # talented in 3
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_1 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_1 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_1 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_1 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_1 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_1 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_1 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_1 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 }
			}
		}
	}
	if = {
		limit = {
			has_country_flag = DA_can_make_mage_t3
		}
		custom_tooltip = DA_adk.6.tt3
		hidden_effect = {
			DA_clear_ruler_personalities = yes
			add_ruler_personality = mage_personality
			random_list = { # renowned in 3
				1 = { set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 }
				1 = { set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 }
				1 = { set_ruler_flag = divination_1 set_ruler_flag = divination_2 }
				1 = { set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 }
				1 = { set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 }
				1 = { set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 }
				1 = { set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 }
				1 = { set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 set_ruler_flag = divination_2 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 set_ruler_flag = divination_2 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 }
			}
			# talented in all others
			set_ruler_flag = abjuration_1
			set_ruler_flag = transmutation_1
			set_ruler_flag = divination_1
			set_ruler_flag = evocation_1
			set_ruler_flag = conjuration_1
			set_ruler_flag = enchantment_1
			set_ruler_flag = illusion_1
			set_ruler_flag = necromancy_1
		}
	}
}
DA_province_ADK_relative_to_dig_level = {
	
	if = {
		limit = { 
			DA_has_dig_level_1_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_2 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 2 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 2 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_2_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_3 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 2 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 2 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_3_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_4 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 3 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 3 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_4_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_5 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 4 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 4 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_5_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_6 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 5 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 5 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_6_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_7 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 6 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 6 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_7_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_8 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 7 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 7 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_8_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_9 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 8 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 8 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_9_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_10 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 9 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 9 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_10_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_11 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 10 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 10 } }
		}
	}
	else = { # should never go here
		add_base_production = 1
		
	}
}
DA_province_gold_relative_to_dig_level = {
	if = {
		limit = { 
			DA_has_dig_level_1_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_2 }
		}
		owner = {
			add_treasury = 50
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_2_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_3 }
		}
		owner = {
			add_treasury = 100
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_3_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_4 }
		}
		owner = {
			add_treasury = 200
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_4_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_5 }
		}
		owner = {
			add_treasury = 400
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_5_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_6 }
		}
		owner = {
			add_treasury = 600
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_6_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_7 }
		}
		owner = {
			add_treasury = 1000
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_7_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_8 }
		}
		owner = {
			add_treasury = 1600
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_8_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_9 }
		}
		owner = {
			add_treasury = 2000
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_9_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_10 }
		}
		owner = {
			add_treasury = 5000
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_10_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_11 }
		}
		owner = {
			add_treasury = 10000
		}
	}
	else = { # should never go here
		add_base_tax = 1
		
	}
}

DA_province_prestige_relative_to_dig_level = {
	if = {
		limit = { 
			DA_has_dig_level_1_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_2 }
		}
		owner = {
			add_prestige = 2
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_2_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_3 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 3
			}
			else = {
				add_prestige = 3
			}
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_3_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_4 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 4
			}
			else = {
				add_prestige = 4
			}
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_4_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_5 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 5
			}
			else = {
				add_prestige = 5
			}
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_5_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_6 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 6
			}
			else = {
				add_prestige = 6
			}
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_6_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_7 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 7
			}
			else = {
				add_prestige = 7
			}
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_7_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_8 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 8
			}
			else = {
				add_prestige = 8
			}
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_8_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_9 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 9
			}
			else = {
				add_prestige = 9
			}
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_9_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_10 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 10
			}
			else = {
				add_prestige = 10
			}
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_10_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_11 }
		}
		owner = {
			if = {
				limit = {
					prestige = 100
				}
				add_splendor = 11
			}
			else = {
				add_prestige = 11
			}
		}
	}
	else = { # should never go here
		add_base_tax = 1
		
	}
}
DA_province_goblins_relative_to_dig_level = {
	if = {
		limit = { 
			DA_has_dig_level_1_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_2 }
		}
		
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 1
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_2_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_3 }
		}
		
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 1
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_3_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_4 }
		}
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 1
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_4_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_5 }
		}
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 1
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_5_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_6 }
		}
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 2
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_6_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_7 }
		}
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 2
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_7_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_8 }
		}
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 2
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_8_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_9 }
		}
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 3
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_9_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_10 }
		}
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 4
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_10_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_11 }
		}
		spawn_rebels = {
			type = DA_Deep_goblins_rebels
			size = 5
		}
	}
	else = { # should never go here
		add_base_manpower = 1
	}
}
DA_give_king_treasury = {
	
	if = {
		limit = { 
			DA_has_dig_level_1_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_2 }
		}
		
		owner = {
			add_prestige = 4
			add_treasury = 200
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_2_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_3 }
		}
		
		owner = {
			add_prestige = 6
			add_treasury = 400
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_3_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_4 }
		}
		
		owner = {
			add_prestige = 10
			add_treasury = 600
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_4_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_5 }
		}
		
		owner = {
			add_prestige = 14
			add_treasury = 1200
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_5_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_6 }
		}
		
		owner = {
			add_prestige = 16
			add_treasury = 2000
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_6_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_7 }
		}
		
		owner = {
			add_prestige = 20
			add_treasury = 3000
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_7_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_8 }
		}
		
		owner = {
			add_prestige = 30
			add_treasury = 4000
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_8_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_9 }
		}
		
		owner = {
			add_prestige = 40
			add_treasury = 10000
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_9_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_10 }
		}
		
		owner = {
			add_prestige = 50
			add_treasury = 20000
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_10_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_11 }
		}
		
		owner = {
			add_prestige = 60
			add_treasury = 40000
		}
	}
	else = { # should never go here
		add_base_tax = 1
		
	}
	add_permanent_province_modifier = {
		name = DA_treasury_boost_development
		duration = 3650
	}
}

DA_mad_scientist_effect = {
	
	if = {
		limit = { 
			DA_has_dig_level_1_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_2 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 3 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 3 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_2_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_3 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 4 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 4 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_3_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_4 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 5 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 5 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_4_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_5 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 6 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 6 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_5_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_6 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 7 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 7 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_6_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_7 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 8 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 8 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_7_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_8 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 9 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 9 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_8_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_9 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 10 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 10 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_9_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_10 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 11 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 11 } }
		}
	}
	else_if = {
		limit = { 
			DA_has_dig_level_10_or_higher = yes
			NOT = { has_province_flag = DA_looked_dig_adk_11 }
		}
		owner = {
			tooltip = { add_adk_effect = { add = 12 } }
			hidden_effect = { change_variable = { ancientDwarvenKnowledge = 12 } }
		}
	}
	else = { # should never go here
		add_base_production = 1
		
	}
}


DA_save_current_personalties = {
	set_variable = {
		which = DA_num_of_personalities
		value = 0
	}
	if = {
		limit = {
			ruler_has_personality = just_personality
		}
		set_country_flag = DA_ruler_has_just_personality
	}
	if = {
		limit = {
			ruler_has_personality = righteous_personality
		}
		set_country_flag = DA_ruler_has_righteous_personality
	}
	if = {
		limit = {
			ruler_has_personality = tolerant_personality
		}
		set_country_flag = DA_ruler_has_tolerant_personality
	}
	if = {
		limit = {
			ruler_has_personality = kind_hearted_personality
		}
		set_country_flag = DA_ruler_has_kind_hearted_personality
	}
	if = {
		limit = {
			ruler_has_personality = free_thinker_personality
		}
		set_country_flag = DA_ruler_has_free_thinker_personality
	}
	if = {
		limit = {
			ruler_has_personality = well_connected_personality
		}
		set_country_flag = DA_ruler_has_well_connected_personality
	}
	if = {
		limit = {
			ruler_has_personality = calm_personality
		}
		set_country_flag = DA_ruler_has_calm_personality
	}
	if = {
		limit = {
			ruler_has_personality = careful_personality
		}
		set_country_flag = DA_ruler_has_careful_personality
	}
	if = {
		limit = {
			ruler_has_personality = secretive_personality
		}
		set_country_flag = DA_ruler_has_secretive_personality
	}
	if = {
		limit = {
			ruler_has_personality = intricate_web_weaver_personality
		}
		set_country_flag = DA_ruler_has_intricate_web_weaver_personality
	}
	if = {
		limit = {
			ruler_has_personality = fertile_personality
		}
		set_country_flag = DA_ruler_has_fertile_personality
	}
	if = {
		limit = {
			ruler_has_personality = well_advised_personality
		}
		set_country_flag = DA_ruler_has_well_advised_personality
	}
	if = {
		limit = {
			ruler_has_personality = benevolent_personality
		}
		set_country_flag = DA_ruler_has_benevolent_personality
	}
	if = {
		limit = {
			ruler_has_personality = zealot_personality
		}
		set_country_flag = DA_ruler_has_zealot_personality
	}
	if = {
		limit = {
			ruler_has_personality = pious_personality
		}
		set_country_flag = DA_ruler_has_pious_personality
	}
	if = {
		limit = {
			ruler_has_personality = lawgiver_personality
		}
		set_country_flag = DA_ruler_has_lawgiver_personality
	}
	if = {
		limit = {
			ruler_has_personality = midas_touched_personality
		}
		set_country_flag = DA_ruler_has_midas_touched_personality
	}
	if = {
		limit = {
			ruler_has_personality = incorruptible_personality
		}
		set_country_flag = DA_ruler_has_incorruptible_personality
	}
	if = {
		limit = {
			ruler_has_personality = architectural_visionary_personality
		}
		set_country_flag = DA_ruler_has_architectural_visionary_personality
	}
	if = {
		limit = {
			ruler_has_personality = scholar_personality
		}
		set_country_flag = DA_ruler_has_scholar_personality
	}
	if = {
		limit = {
			ruler_has_personality = entrepreneur_personality
		}
		set_country_flag = DA_ruler_has_entrepreneur_personality
	}
	if = {
		limit = {
			ruler_has_personality = industrious_personality
		}
		set_country_flag = DA_ruler_has_industrious_personality
	}
	if = {
		limit = {
			ruler_has_personality = expansionist_personality
		}
		set_country_flag = DA_ruler_has_expansionist_personality
	}
	if = {
		limit = {
			ruler_has_personality = charismatic_negotiator_personality
		}
		set_country_flag = DA_ruler_has_charismatic_negotiator_personality
	}
	if = {
		limit = {
			ruler_has_personality = silver_tongue_personality
		}
		set_country_flag = DA_ruler_has_silver_tongue_personality
	}
	if = {
		limit = {
			ruler_has_personality = conqueror_personality
		}
		set_country_flag = DA_ruler_has_conqueror_personality
	}
	if = {
		limit = {
			ruler_has_personality = tactical_genius_personality
		}
		set_country_flag = DA_ruler_has_tactical_genius_personality
	}
	if = {
		limit = {
			ruler_has_personality = bold_fighter_personality
		}
		set_country_flag = DA_ruler_has_bold_fighter_personality
	}
	if = {
		limit = {
			ruler_has_personality = strict_personality
		}
		set_country_flag = DA_ruler_has_strict_personality
	}
	if = {
		limit = {
			ruler_has_personality = inspiring_leader_personality
		}
		set_country_flag = DA_ruler_has_inspiring_leader_personality
	}
	if = {
		limit = {
			ruler_has_personality = martial_educator_personality
		}
		set_country_flag = DA_ruler_has_martial_educator_personality
	}
	if = {
		limit = {
			ruler_has_personality = navigator_personality
		}
		set_country_flag = DA_ruler_has_navigator_personality
	}
	if = {
		limit = {
			ruler_has_personality = fierce_negotiator_personality
		}
		set_country_flag = DA_ruler_has_fierce_negotiator_personality
	}
	if = {
		limit = {
			ruler_has_personality = babbling_buffoon_personality
		}
		set_country_flag = DA_ruler_has_babbling_buffoon_personality
	}
	if = {
		limit = {
			ruler_has_personality = embezzler_personality
		}
		set_country_flag = DA_ruler_has_embezzler_personality
	}
	if = {
		limit = {
			ruler_has_personality = infertile_personality
		}
		set_country_flag = DA_ruler_has_infertile_personality
	}
	if = {
		limit = {
			ruler_has_personality = drunkard_personality
		}
		set_country_flag = DA_ruler_has_drunkard_personality
	}
	if = {
		limit = {
			ruler_has_personality = sinner_personality
		}
		set_country_flag = DA_ruler_has_sinner_personality
	}
	if = {
		limit = {
			ruler_has_personality = greedy_personality
		}
		set_country_flag = DA_ruler_has_greedy_personality
	}
	if = {
		limit = {
			ruler_has_personality = cruel_personality
		}
		set_country_flag = DA_ruler_has_cruel_personality
	}
	if = {
		limit = {
			ruler_has_personality = naive_personality
		}
		set_country_flag = DA_ruler_has_naive_personality
	}
	if = {
		limit = {
			ruler_has_personality = craven_personality
		}
		set_country_flag = DA_ruler_has_craven_personality
	}
	if = {
		limit = {
			ruler_has_personality = loose_lips_personality
		}
		set_country_flag = DA_ruler_has_loose_lips_personality
	}
	if = {
		limit = {
			ruler_has_personality = obsessive_perfectionist_personality
		}
		set_country_flag = DA_ruler_has_obsessive_perfectionist_personality
	}
	if = {
		limit = {
			ruler_has_personality = malevolent_personality
		}
		set_country_flag = DA_ruler_has_malevolent_personality
	}
	if = {
		limit = {
			ruler_has_personality = immortal_personality
		}
		set_country_flag = DA_ruler_has_immortal_personality
	}
	if = {
		limit = {
			ruler_has_personality = mage_personality
		}
		set_country_flag = DA_ruler_has_mage_personality
	}
	if = {
		limit = {
			ruler_has_personality = humane_personality
		}
		set_country_flag = DA_ruler_has_humane_personality
	}
	if = {
		limit = {
			ruler_has_personality = petty_personality
		}
		set_country_flag = DA_ruler_has_petty_personality
	}
	# from here are Dwarven Knowledge traits, tier 2
	if = {
		limit = {
			ruler_has_personality = DA_Minor_Enhanced_brain_personality
		}
		set_country_flag = DA_ruler_has_DA_Minor_Enhanced_brain_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Minor_Warrior_mentality_personality
		}
		set_country_flag = DA_ruler_has_DA_Minor_Warrior_mentality_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Minor_Pheromones_personality
		}
		set_country_flag = DA_ruler_has_DA_Minor_Pheromones_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Minor_Living_calculator_personality
		}
		set_country_flag = DA_ruler_has_DA_Minor_Living_calculator_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Minor_Perceptive_personality
		}
		set_country_flag = DA_ruler_has_DA_Minor_Perceptive_personality
	}
	# tier 3
	if = {
		limit = {
			ruler_has_personality = DA_Enhanced_brain_personality
		}
		set_country_flag = DA_ruler_has_DA_Enhanced_brain_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Warrior_mentality_personality
		}
		set_country_flag = DA_ruler_has_DA_Warrior_mentality_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Pheromones_personality
		}
		set_country_flag = DA_ruler_has_DA_Pheromones_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Living_calculator_personality
		}
		set_country_flag = DA_ruler_has_DA_Living_calculator_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Perceptive_personality
		}
		set_country_flag = DA_ruler_has_DA_Perceptive_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Damestear_dwarf_personality
		}
		set_country_flag = DA_ruler_has_DA_Damestear_dwarf_personality
	}
	if = {
		limit = {
			ruler_has_personality = DA_Dwarven_Divinity_personality
		}
		set_country_flag = DA_ruler_has_DA_Dwarven_Divinity_personality
	}
}

DA_clear_ruler_personalities = {
	hidden_effect = {
		remove_ruler_personality = just_personality
		remove_ruler_personality = righteous_personality
		remove_ruler_personality = tolerant_personality
		remove_ruler_personality = kind_hearted_personality
		remove_ruler_personality = free_thinker_personality
		remove_ruler_personality = well_connected_personality
		remove_ruler_personality = calm_personality
		remove_ruler_personality = careful_personality
		remove_ruler_personality = secretive_personality
		remove_ruler_personality = intricate_web_weaver_personality
		remove_ruler_personality = fertile_personality
		remove_ruler_personality = well_advised_personality
		remove_ruler_personality = benevolent_personality
		remove_ruler_personality = zealot_personality
		remove_ruler_personality = pious_personality
		remove_ruler_personality = lawgiver_personality
		remove_ruler_personality = midas_touched_personality
		remove_ruler_personality = incorruptible_personality
		remove_ruler_personality = architectural_visionary_personality
		remove_ruler_personality = scholar_personality
		remove_ruler_personality = entrepreneur_personality
		remove_ruler_personality = industrious_personality
		remove_ruler_personality = expansionist_personality
		remove_ruler_personality = charismatic_negotiator_personality
		remove_ruler_personality = silver_tongue_personality
		remove_ruler_personality = conqueror_personality
		remove_ruler_personality = tactical_genius_personality
		remove_ruler_personality = bold_fighter_personality
		remove_ruler_personality = strict_personality
		remove_ruler_personality = inspiring_leader_personality
		remove_ruler_personality = martial_educator_personality
		remove_ruler_personality = navigator_personality
		remove_ruler_personality = fierce_negotiator_personality
		remove_ruler_personality = babbling_buffoon_personality
		remove_ruler_personality = embezzler_personality
		remove_ruler_personality = infertile_personality
		remove_ruler_personality = drunkard_personality
		remove_ruler_personality = sinner_personality
		remove_ruler_personality = greedy_personality
		remove_ruler_personality = cruel_personality
		remove_ruler_personality = naive_personality
		remove_ruler_personality = craven_personality
		remove_ruler_personality = loose_lips_personality
		remove_ruler_personality = obsessive_perfectionist_personality
		remove_ruler_personality = malevolent_personality
		remove_ruler_personality = immortal_personality
		remove_ruler_personality = reformist_personality
		# remove_ruler_personality = enlightened_personality
		# remove_ruler_personality = absolutist_personality
		remove_ruler_personality = legendary_pirate_personality
		remove_ruler_personality = patron_of_arts_personality
		remove_ruler_personality = mage_personality
		remove_ruler_personality = humane_personality
		remove_ruler_personality = petty_personality

		remove_ruler_personality = DA_Minor_Enhanced_brain_personality
		remove_ruler_personality = DA_Minor_Warrior_mentality_personality
		remove_ruler_personality = DA_Minor_Pheromones_personality
		remove_ruler_personality = DA_Minor_Living_calculator_personality
		remove_ruler_personality = DA_Minor_Perceptive_personality

		remove_ruler_personality = DA_Enhanced_brain_personality
		remove_ruler_personality = DA_Warrior_mentality_personality
		remove_ruler_personality = DA_Pheromones_personality
		remove_ruler_personality = DA_Living_calculator_personality
		remove_ruler_personality = DA_Perceptive_personality
		remove_ruler_personality = DA_Damestear_dwarf_personality
		remove_ruler_personality = DA_Dwarven_Divinity_personality
	}
}

DA_apply_new_personalities = {
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_mage_personality
		}
		add_ruler_personality = mage_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_just_personality
		}
		add_ruler_personality = just_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_righteous_personality
		}
		add_ruler_personality = righteous_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_tolerant_personality
		}
		add_ruler_personality = tolerant_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_kind_hearted_personality
		}
		add_ruler_personality = kind_hearted_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_free_thinker_personality
		}
		add_ruler_personality = free_thinker_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_well_connected_personality
		}
		add_ruler_personality = well_connected_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_calm_personality
		}
		add_ruler_personality = calm_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_careful_personality
		}
		add_ruler_personality = careful_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_secretive_personality
		}
		add_ruler_personality = secretive_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_intricate_web_weaver_personality
		}
		add_ruler_personality = intricate_web_weaver_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_fertile_personality
		}
		add_ruler_personality = fertile_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_well_advised_personality
		}
		add_ruler_personality = well_advised_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_benevolent_personality
		}
		add_ruler_personality = benevolent_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_zealot_personality
		}
		add_ruler_personality = zealot_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_pious_personality
		}
		add_ruler_personality = pious_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_lawgiver_personality
		}
		add_ruler_personality = lawgiver_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_midas_touched_personality
		}
		add_ruler_personality = midas_touched_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_incorruptible_personality
		}
		add_ruler_personality = incorruptible_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_architectural_visionary_personality
		}
		add_ruler_personality = architectural_visionary_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_scholar_personality
		}
		add_ruler_personality = scholar_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_entrepreneur_personality
		}
		add_ruler_personality = entrepreneur_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_industrious_personality
		}
		add_ruler_personality = industrious_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_expansionist_personality
		}
		add_ruler_personality = expansionist_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_charismatic_negotiator_personality
		}
		add_ruler_personality = charismatic_negotiator_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_silver_tongue_personality
		}
		add_ruler_personality = silver_tongue_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_conqueror_personality
		}
		add_ruler_personality = conqueror_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_tactical_genius_personality
		}
		add_ruler_personality = tactical_genius_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_bold_fighter_personality
		}
		add_ruler_personality = bold_fighter_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_strict_personality
		}
		add_ruler_personality = strict_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_inspiring_leader_personality
		}
		add_ruler_personality = inspiring_leader_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_martial_educator_personality
		}
		add_ruler_personality = martial_educator_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_navigator_personality
		}
		add_ruler_personality = navigator_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_fierce_negotiator_personality
		}
		add_ruler_personality = fierce_negotiator_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_humane_personality
		}
		add_ruler_personality = humane_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_petty_personality
		}
		add_ruler_personality = petty_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Minor_Enhanced_brain_personality
		}
		add_ruler_personality = DA_Minor_Enhanced_brain_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Minor_Warrior_mentality_personality
		}
		add_ruler_personality = DA_Minor_Warrior_mentality_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Minor_Pheromones_personality
		}
		add_ruler_personality = DA_Minor_Pheromones_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Minor_Living_calculator_personality
		}
		add_ruler_personality = DA_Minor_Living_calculator_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Minor_Perceptive_personality
		}
		add_ruler_personality = DA_Minor_Perceptive_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Enhanced_brain_personality
		}
		add_ruler_personality = DA_Enhanced_brain_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Warrior_mentality_personality
		}
		add_ruler_personality = DA_Warrior_mentality_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Pheromones_personality
		}
		add_ruler_personality = DA_Pheromones_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Living_calculator_personality
		}
		add_ruler_personality = DA_Living_calculator_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Perceptive_personality
		}
		add_ruler_personality = DA_Perceptive_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Damestear_dwarf_personality
		}
		add_ruler_personality = DA_Damestear_dwarf_personality
	}
	if = {
		limit = {
			has_country_flag = DA_ruler_wants_DA_Dwarven_Divinity_personality
		}
		add_ruler_personality = DA_Dwarven_Divinity_personality
	}
}


DA_clr_genetic_engineering_flags = {
	subtract_variable = {
		which = DA_num_of_personalities
		value = 3
	}
	# the initial personalities of the ruler, not used right now
	clr_country_flag = DA_ruler_has_just_personality
	clr_country_flag = DA_ruler_has_righteous_personality
	clr_country_flag = DA_ruler_has_tolerant_personality
	clr_country_flag = DA_ruler_has_kind_hearted_personality
	clr_country_flag = DA_ruler_has_free_thinker_personality
	clr_country_flag = DA_ruler_has_well_connected_personality
	clr_country_flag = DA_ruler_has_calm_personality
	clr_country_flag = DA_ruler_has_careful_personality
	clr_country_flag = DA_ruler_has_secretive_personality
	clr_country_flag = DA_ruler_has_intricate_web_weaver_personality
	clr_country_flag = DA_ruler_has_fertile_personality
	clr_country_flag = DA_ruler_has_well_advised_personality
	clr_country_flag = DA_ruler_has_benevolent_personality
	clr_country_flag = DA_ruler_has_zealot_personality
	clr_country_flag = DA_ruler_has_pious_personality
	clr_country_flag = DA_ruler_has_lawgiver_personality
	clr_country_flag = DA_ruler_has_midas_touched_personality
	clr_country_flag = DA_ruler_has_incorruptible_personality
	clr_country_flag = DA_ruler_has_architectural_visionary_personality
	clr_country_flag = DA_ruler_has_scholar_personality
	clr_country_flag = DA_ruler_has_entrepreneur_personality
	clr_country_flag = DA_ruler_has_industrious_personality
	clr_country_flag = DA_ruler_has_expansionist_personality
	clr_country_flag = DA_ruler_has_charismatic_negotiator_personality
	clr_country_flag = DA_ruler_has_silver_tongue_personality
	clr_country_flag = DA_ruler_has_conqueror_personality
	clr_country_flag = DA_ruler_has_tactical_genius_personality
	clr_country_flag = DA_ruler_has_bold_fighter_personality
	clr_country_flag = DA_ruler_has_strict_personality
	clr_country_flag = DA_ruler_has_inspiring_leader_personality
	clr_country_flag = DA_ruler_has_martial_educator_personality
	clr_country_flag = DA_ruler_has_navigator_personality
	clr_country_flag = DA_ruler_has_fierce_negotiator_personality
	clr_country_flag = DA_ruler_has_babbling_buffoon_personality
	clr_country_flag = DA_ruler_has_embezzler_personality
	clr_country_flag = DA_ruler_has_infertile_personality
	clr_country_flag = DA_ruler_has_drunkard_personality
	clr_country_flag = DA_ruler_has_sinner_personality
	clr_country_flag = DA_ruler_has_greedy_personality
	clr_country_flag = DA_ruler_has_cruel_personality
	clr_country_flag = DA_ruler_has_naive_personality
	clr_country_flag = DA_ruler_has_craven_personality
	clr_country_flag = DA_ruler_has_loose_lips_personality
	clr_country_flag = DA_ruler_has_obsessive_perfectionist_personality
	clr_country_flag = DA_ruler_has_malevolent_personality
	clr_country_flag = DA_ruler_has_immortal_personality
	clr_country_flag = DA_ruler_has_mage_personality
	clr_country_flag = DA_ruler_has_humane_personality
	clr_country_flag = DA_ruler_has_petty_personality

	clr_country_flag = DA_ruler_has_DA_Minor_Enhanced_brain_personality
	clr_country_flag = DA_ruler_has_DA_Minor_Warrior_mentality_personality
	clr_country_flag = DA_ruler_has_DA_Minor_Pheromones_personality
	clr_country_flag = DA_ruler_has_DA_Minor_Living_calculator_personality
	clr_country_flag = DA_ruler_has_DA_Minor_Perceptive_personality

	clr_country_flag = DA_ruler_has_DA_Enhanced_brain_personality
	clr_country_flag = DA_ruler_has_DA_Warrior_mentality_personality
	clr_country_flag = DA_ruler_has_DA_Pheromones_personality
	clr_country_flag = DA_ruler_has_DA_Living_calculator_personality
	clr_country_flag = DA_ruler_has_DA_Perceptive_personality
	clr_country_flag = DA_ruler_has_DA_Damestear_dwarf_personality
	clr_country_flag = DA_ruler_has_DA_Dwarven_Divinity_personality

	# the flags for the trait you want
	
	clr_country_flag = DA_ruler_wants_just_personality
	clr_country_flag = DA_ruler_wants_righteous_personality
	clr_country_flag = DA_ruler_wants_tolerant_personality
	clr_country_flag = DA_ruler_wants_kind_hearted_personality
	clr_country_flag = DA_ruler_wants_free_thinker_personality
	clr_country_flag = DA_ruler_wants_well_connected_personality
	clr_country_flag = DA_ruler_wants_calm_personality
	clr_country_flag = DA_ruler_wants_careful_personality
	clr_country_flag = DA_ruler_wants_secretive_personality
	clr_country_flag = DA_ruler_wants_intricate_web_weaver_personality
	clr_country_flag = DA_ruler_wants_fertile_personality
	clr_country_flag = DA_ruler_wants_well_advised_personality
	clr_country_flag = DA_ruler_wants_benevolent_personality
	clr_country_flag = DA_ruler_wants_zealot_personality
	clr_country_flag = DA_ruler_wants_pious_personality
	clr_country_flag = DA_ruler_wants_lawgiver_personality
	clr_country_flag = DA_ruler_wants_midas_touched_personality
	clr_country_flag = DA_ruler_wants_incorruptible_personality
	clr_country_flag = DA_ruler_wants_architectural_visionary_personality
	clr_country_flag = DA_ruler_wants_scholar_personality
	clr_country_flag = DA_ruler_wants_entrepreneur_personality
	clr_country_flag = DA_ruler_wants_industrious_personality
	clr_country_flag = DA_ruler_wants_expansionist_personality
	clr_country_flag = DA_ruler_wants_charismatic_negotiator_personality
	clr_country_flag = DA_ruler_wants_silver_tongue_personality
	clr_country_flag = DA_ruler_wants_conqueror_personality
	clr_country_flag = DA_ruler_wants_tactical_genius_personality
	clr_country_flag = DA_ruler_wants_bold_fighter_personality
	clr_country_flag = DA_ruler_wants_strict_personality
	clr_country_flag = DA_ruler_wants_inspiring_leader_personality
	clr_country_flag = DA_ruler_wants_martial_educator_personality
	clr_country_flag = DA_ruler_wants_navigator_personality
	clr_country_flag = DA_ruler_wants_fierce_negotiator_personality
	clr_country_flag = DA_ruler_wants_mage_personality
	clr_country_flag = DA_ruler_wants_humane_personality
	clr_country_flag = DA_ruler_wants_petty_personality
	clr_country_flag = DA_ruler_wants_DA_Minor_Enhanced_brain_personality
	clr_country_flag = DA_ruler_wants_DA_Minor_Warrior_mentality_personality
	clr_country_flag = DA_ruler_wants_DA_Minor_Pheromones_personality
	clr_country_flag = DA_ruler_wants_DA_Minor_Living_calculator_personality
	clr_country_flag = DA_ruler_wants_DA_Minor_Perceptive_personality
	clr_country_flag = DA_ruler_wants_DA_Enhanced_brain_personality
	clr_country_flag = DA_ruler_wants_DA_Warrior_mentality_personality
	clr_country_flag = DA_ruler_wants_DA_Pheromones_personality
	clr_country_flag = DA_ruler_wants_DA_Living_calculator_personality
	clr_country_flag = DA_ruler_wants_DA_Perceptive_personality
	clr_country_flag = DA_ruler_wants_DA_Damestear_dwarf_personality
	clr_country_flag = DA_ruler_wants_DA_Dwarven_Divinity_personality
}
DA_clr_VR_effect = {
	every_core_province = {
		limit = {
			province_id = 4056
		}
		clr_province_flag = DA_expedition_in_progress
		clr_province_flag = DA_looked_dig_adk_2
		clr_province_flag = DA_looked_dig_adk_3
		clr_province_flag = DA_looked_dig_adk_4
		clr_province_flag = DA_looked_dig_adk_5
		clr_province_flag = DA_looked_dig_adk_6
		clr_province_flag = DA_looked_dig_adk_7
		clr_province_flag = DA_looked_dig_adk_8
		clr_province_flag = DA_looked_dig_adk_9
		clr_province_flag = DA_looked_dig_adk_10
		clr_province_flag = DA_looked_dig_adk_11
		remove_province_modifier = DA_local_explored_dig_2
		remove_province_modifier = DA_local_explored_dig_3
		remove_province_modifier = DA_local_explored_dig_4
		remove_province_modifier = DA_local_explored_dig_5
		remove_province_modifier = DA_local_explored_dig_6
		remove_province_modifier = DA_local_explored_dig_7
		remove_province_modifier = DA_local_explored_dig_8
		remove_province_modifier = DA_local_explored_dig_9
		remove_province_modifier = DA_local_explored_dig_10
		remove_province_modifier = DA_local_explored_dig_11
	}
}
DA_clr_HO_effect = {
	every_core_province = {
		limit = {
			province_id = 2868
		}
		clr_province_flag = DA_expedition_in_progress
		clr_province_flag = DA_looked_dig_adk_2
		clr_province_flag = DA_looked_dig_adk_3
		clr_province_flag = DA_looked_dig_adk_4
		clr_province_flag = DA_looked_dig_adk_5
		clr_province_flag = DA_looked_dig_adk_6
		clr_province_flag = DA_looked_dig_adk_7
		clr_province_flag = DA_looked_dig_adk_8
		clr_province_flag = DA_looked_dig_adk_9
		clr_province_flag = DA_looked_dig_adk_10
		clr_province_flag = DA_looked_dig_adk_11
		remove_province_modifier = DA_local_explored_dig_2
		remove_province_modifier = DA_local_explored_dig_3
		remove_province_modifier = DA_local_explored_dig_4
		remove_province_modifier = DA_local_explored_dig_5
		remove_province_modifier = DA_local_explored_dig_6
		remove_province_modifier = DA_local_explored_dig_7
		remove_province_modifier = DA_local_explored_dig_8
		remove_province_modifier = DA_local_explored_dig_9
		remove_province_modifier = DA_local_explored_dig_10
		remove_province_modifier = DA_local_explored_dig_11
	}
}
DA_save_current_ruler_magic_schools = {
	if = {
		limit = {
			has_ruler_flag = abjuration_1
		}
		set_country_flag = had_abjuration_1
	}
	if = {
		limit = {
			has_ruler_flag = abjuration_2
		}
		set_country_flag = had_abjuration_2
	}
	if = {
		limit = {
			has_ruler_flag = abjuration_3
		}
		set_country_flag = had_abjuration_3
	}
	if = {
		limit = {
			has_ruler_flag = transmutation_1
		}
		set_country_flag = had_transmutation_1
	}
	if = {
		limit = {
			has_ruler_flag = transmutation_2
		}
		set_country_flag = had_transmutation_2
	}
	if = {
		limit = {
			has_ruler_flag = transmutation_3
		}
		set_country_flag = had_transmutation_3
	}
	if = {
		limit = {
			has_ruler_flag = divination_1
		}
		set_country_flag = had_divination_1
	}
	if = {
		limit = {
			has_ruler_flag = divination_2
		}
		set_country_flag = had_divination_2
	}
	if = {
		limit = {
			has_ruler_flag = divination_3
		}
		set_country_flag = had_divination_3
	}
	if = {
		limit = {
			has_ruler_flag = evocation_1
		}
		set_country_flag = had_evocation_1
	}
	if = {
		limit = {
			has_ruler_flag = evocation_2
		}
		set_country_flag = had_evocation_2
	}
	if = {
		limit = {
			has_ruler_flag = evocation_3
		}
		set_country_flag = had_evocation_3
	}
	if = {
		limit = {
			has_ruler_flag = conjuration_1
		}
		set_country_flag = had_conjuration_1
	}
	if = {
		limit = {
			has_ruler_flag = conjuration_2
		}
		set_country_flag = had_conjuration_2
	}
	if = {
		limit = {
			has_ruler_flag = conjuration_3
		}
		set_country_flag = had_conjuration_3
	}
	if = {
		limit = {
			has_ruler_flag = enchantment_1
		}
		set_country_flag = had_enchantment_1
	}
	if = {
		limit = {
			has_ruler_flag = enchantment_2
		}
		set_country_flag = had_enchantment_2
	}
	if = {
		limit = {
			has_ruler_flag = enchantment_3
		}
		set_country_flag = had_enchantment_3
	}
	if = {
		limit = {
			has_ruler_flag = illusion_1
		}
		set_country_flag = had_illusion_1
	}
	if = {
		limit = {
			has_ruler_flag = illusion_2
		}
		set_country_flag = had_illusion_2
	}
	if = {
		limit = {
			has_ruler_flag = illusion_3
		}
		set_country_flag = had_illusion_3
	}
	if = {
		limit = {
			has_ruler_flag = necromancy_1
		}
		set_country_flag = had_necromancy_1
	}
	if = {
		limit = {
			has_ruler_flag = necromancy_2
		}
		set_country_flag = had_necromancy_2
	}
	if = {
		limit = {
			has_ruler_flag = necromancy_3
		}
		set_country_flag = had_necromancy_3
	}
	set_country_flag = DA_saved_some_runes
}

DA_apply_old_ruler_magic_schools = {
	if = {
		limit = {
			has_country_flag = had_abjuration_1
		}
		set_ruler_flag = abjuration_1
	}
	if = {
		limit = {
			has_country_flag = had_abjuration_2
		}
		set_ruler_flag = abjuration_2
	}
	if = {
		limit = {
			has_country_flag = had_abjuration_3
		}
		set_ruler_flag = abjuration_3
	}
	if = {
		limit = {
			has_country_flag = had_transmutation_1
		}
		set_ruler_flag = transmutation_1
	}
	if = {
		limit = {
			has_country_flag = had_transmutation_2
		}
		set_ruler_flag = transmutation_2
	}
	if = {
		limit = {
			has_country_flag = had_transmutation_3
		}
		set_ruler_flag = transmutation_3
	}
	if = {
		limit = {
			has_country_flag = had_divination_1
		}
		set_ruler_flag = divination_1
	}
	if = {
		limit = {
			has_country_flag = had_divination_2
		}
		set_ruler_flag = divination_2
	}
	if = {
		limit = {
			has_country_flag = had_divination_3
		}
		set_ruler_flag = divination_3
	}
	if = {
		limit = {
			has_country_flag = had_evocation_1
		}
		set_ruler_flag = evocation_1
	}
	if = {
		limit = {
			has_country_flag = had_evocation_2
		}
		set_ruler_flag = evocation_2
	}
	if = {
		limit = {
			has_country_flag = had_evocation_3
		}
		set_ruler_flag = evocation_3
	}
	if = {
		limit = {
			has_country_flag = had_conjuration_1
		}
		set_ruler_flag = conjuration_1
	}
	if = {
		limit = {
			has_country_flag = had_conjuration_2
		}
		set_ruler_flag = conjuration_2
	}
	if = {
		limit = {
			has_country_flag = had_conjuration_3
		}
		set_ruler_flag = conjuration_3
	}
	if = {
		limit = {
			has_country_flag = had_enchantment_1
		}
		set_ruler_flag = enchantment_1
	}
	if = {
		limit = {
			has_country_flag = had_enchantment_2
		}
		set_ruler_flag = enchantment_2
	}
	if = {
		limit = {
			has_country_flag = had_enchantment_3
		}
		set_ruler_flag = enchantment_3
	}
	if = {
		limit = {
			has_country_flag = had_illusion_1
		}
		set_ruler_flag = illusion_1
	}
	if = {
		limit = {
			has_country_flag = had_illusion_2
		}
		set_ruler_flag = illusion_2
	}
	if = {
		limit = {
			has_country_flag = had_illusion_3
		}
		set_ruler_flag = illusion_3
	}
	if = {
		limit = {
			has_country_flag = had_necromancy_1
		}
		set_ruler_flag = necromancy_1
	}
	if = {
		limit = {
			has_country_flag = had_necromancy_2
		}
		set_ruler_flag = necromancy_2
	}
	if = {
		limit = {
			has_country_flag = had_necromancy_3
		}
		set_ruler_flag = necromancy_3
	}
	set_ruler_flag = DA_artificial_mage
}

DA_remove_ai_buffs = {
	hidden_effect = {
		every_country = {
			limit = { ai = yes }
			remove_country_modifier = DA_AI_Buffs_1
			remove_country_modifier = DA_AI_Buffs_2
			remove_country_modifier = DA_AI_Buffs_3
			remove_country_modifier = DA_AI_Buffs_4
			remove_country_modifier = DA_AI_Buffs_5
			remove_country_modifier = DA_AI_Buffs_6
			remove_country_modifier = DA_AI_Buffs_7
			remove_country_modifier = DA_AI_Buffs_medium
			remove_country_modifier = DA_AI_Buffs_hard
			remove_country_modifier = DA_AI_Buffs_very_hard
		}
	}
}

DA_on_country_creation_effect = {
	DA_reset_Alchemy_Variables = yes
	
	if = {
		limit = {
			ai = yes
		}
		if = {
			limit = {
				any_country = {
					has_country_modifier = DA_AI_Buffs_7
				}
			}
			add_country_modifier = {
				name = DA_AI_Buffs_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				any_country = {
					has_country_modifier = DA_AI_Buffs_6
				}
			}
			add_country_modifier = {
				name = DA_AI_Buffs_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				any_country = {
					has_country_modifier = DA_AI_Buffs_5
				}
			}
			add_country_modifier = {
				name = DA_AI_Buffs_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				any_country = {
					has_country_modifier = DA_AI_Buffs_4
				}
			}
			add_country_modifier = {
				name = DA_AI_Buffs_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				any_country = {
					has_country_modifier = DA_AI_Buffs_3
				}
			}
			add_country_modifier = {
				name = DA_AI_Buffs_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				any_country = {
					has_country_modifier = DA_AI_Buffs_2
				}
			}
			add_country_modifier = {
				name = DA_AI_Buffs_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				any_country = {
					has_country_modifier = DA_AI_Buffs_1
				}
			}
			add_country_modifier = {
				name = DA_AI_Buffs_1
				duration = -1
			}
		}
	}
}

DA_on_yearly_pulse_2_effect = {
	if = {
		limit = {
			ai = no
		}
		remove_country_modifier = DA_AI_Buffs_vassal_reduction
		remove_country_modifier = DA_AI_Buffs_medium
		remove_country_modifier = DA_AI_Buffs_hard
		remove_country_modifier = DA_AI_Buffs_very_hard
		remove_country_modifier = DA_AI_Buffs_1
		remove_country_modifier = DA_AI_Buffs_2
		remove_country_modifier = DA_AI_Buffs_3
		remove_country_modifier = DA_AI_Buffs_4
		remove_country_modifier = DA_AI_Buffs_5
		remove_country_modifier = DA_AI_Buffs_6
		remove_country_modifier = DA_AI_Buffs_7

		# this is currently useless for AI, so I put it here for less calculations
	
		export_to_variable = {
			value = modifier:DA_fake_warforged_infantry_force_limit
			variable_name = DA_Max_amount_of_warforged_infantry
		}
		export_to_variable = {
			value = modifier:DA_fake_warforged_infantry_force_limit_modifier
			variable_name = DA_amount_of_warforged_infantry_modifier
		}
		change_variable = {
			which = DA_amount_of_warforged_infantry_modifier
			value = 1
		}
		multiply_variable = {
			which = DA_Max_amount_of_warforged_infantry
			which = DA_amount_of_warforged_infantry_modifier
		}
		export_to_variable = {
			value = trigger_value:num_of_musketeers
			variable_name = DA_current_amount_of_warforged_infantry
		}
		export_to_variable = {
			value = modifier:DA_fake_warforged_cavalry_force_limit
			variable_name = DA_Max_amount_of_warforged_cavalry
		}
		export_to_variable = {
			value = modifier:DA_fake_warforged_cavalry_force_limit_modifier
			variable_name = DA_amount_of_warforged_cavalry_modifier
		}
		change_variable = {
			which = DA_amount_of_warforged_cavalry_modifier
			value = 1
		}
		multiply_variable = {
			which = DA_Max_amount_of_warforged_cavalry
			which = DA_amount_of_warforged_cavalry_modifier
		}
		export_to_variable = {
			value = trigger_value:num_of_hussars
			variable_name = DA_current_amount_of_warforged_cavalry
		}
		export_to_variable = {
			value = modifier:DA_fake_warforged_artillery_force_limit
			variable_name = DA_Max_amount_of_warforged_artillery
		}
		export_to_variable = {
			value = modifier:DA_fake_warforged_artillery_force_limit_modifier
			variable_name = DA_amount_of_warforged_artillery_modifier
		}
		change_variable = {
			which = DA_amount_of_warforged_artillery_modifier
			value = 1
		}
		multiply_variable = {
			which = DA_Max_amount_of_warforged_artillery
			which = DA_amount_of_warforged_artillery_modifier
		}
		export_to_variable = {
			value = trigger_value:num_of_cawa
			variable_name = DA_current_amount_of_warforged_artillery
		}


		
		export_to_variable = {
			value = modifier:DA_fake_medicine_illness_spawn_chance
			variable_name = DA_yearly_illness_spawn_chance
		}
		export_to_variable = { # probably best to just use this as the only variable
			value = modifier:DA_fake_medicine_illness_spawn_chance_counter
			variable_name = DA_yearly_illness_spawn_chance_counter
		}
		export_to_variable = {
			value = modifier:DA_fake_medicine_quarantine_efficiency
			variable_name = DA_quarantine_efficiency
		}
		export_to_variable = {
			value = modifier:DA_fake_medicine_quarantine_efficiency
			variable_name = DA_quarantine_efficiency_shower
		}
		multiply_variable = {
			which = DA_quarantine_efficiency_shower
			value = 100
		}
	}
}


DA_on_conquest_scripted_effect = {
	remove_province_modifier = DA_mechanics_upgrade.trade_1
	remove_province_modifier = DA_mechanics_upgrade.trade_2
	remove_province_modifier = DA_mechanics_upgrade.trade_3
	remove_province_modifier = DA_mechanics_upgrade.trade_4
	remove_province_modifier = DA_mechanics_upgrade.appraiser_2
	remove_province_modifier = DA_mechanics_upgrade.workshop_1
	remove_province_modifier = DA_mechanics_upgrade.workshop_2
	remove_province_modifier = DA_mechanics_upgrade.workshop_3
	remove_province_modifier = DA_mechanics_upgrade.workshop_4
	remove_province_modifier = DA_mechanics_upgrade.artisan_2
	remove_province_modifier = DA_mechanics_upgrade.assembler_2
	remove_province_modifier = DA_mechanics_upgrade.tax_1
	remove_province_modifier = DA_mechanics_upgrade.tax_2
	remove_province_modifier = DA_mechanics_upgrade.tax_3
	remove_province_modifier = DA_mechanics_upgrade.tax_4
	remove_province_modifier = DA_mechanics_upgrade.religion_1
	remove_province_modifier = DA_mechanics_upgrade.religion_2
	remove_province_modifier = DA_mechanics_upgrade.religion_3
	remove_province_modifier = DA_mechanics_upgrade.religion_4
	remove_province_modifier = DA_mechanics_upgrade.education_1
	remove_province_modifier = DA_mechanics_upgrade.education_2
	remove_province_modifier = DA_mechanics_upgrade.education_3
	remove_province_modifier = DA_mechanics_upgrade.education_4
	remove_province_modifier = DA_mechanics_upgrade.government_1
	remove_province_modifier = DA_mechanics_upgrade.government_2
	remove_province_modifier = DA_mechanics_upgrade.government_3
	remove_province_modifier = DA_mechanics_upgrade.government_4
	remove_province_modifier = DA_mechanics_upgrade.generators_1
	remove_province_modifier = DA_mechanics_upgrade.generators_2
	remove_province_modifier = DA_mechanics_upgrade.generators_3
	remove_province_modifier = DA_mechanics_upgrade.generators_4
	remove_province_modifier = DA_mechanics_upgrade.cables_2
	remove_province_modifier = DA_mechanics_upgrade.cables_3
	remove_province_modifier = DA_mechanics_upgrade.deposit_1
	remove_province_modifier = DA_mechanics_upgrade.deposit_2
	remove_province_modifier = DA_mechanics_upgrade.deposit_3
	remove_province_modifier = DA_mechanics_upgrade.deposit_4
	remove_province_modifier = DA_mechanics_upgrade.road_1
	remove_province_modifier = DA_mechanics_upgrade.road_2
	remove_province_modifier = DA_mechanics_upgrade.road_3
	remove_province_modifier = DA_mechanics_upgrade.road_4
	remove_province_modifier = DA_mechanics_upgrade.manpower_1
	remove_province_modifier = DA_mechanics_upgrade.manpower_2
	remove_province_modifier = DA_mechanics_upgrade.manpower_3
	remove_province_modifier = DA_mechanics_upgrade.manpower_4
	remove_province_modifier = DA_mechanics_upgrade.forcelimit_1
	remove_province_modifier = DA_mechanics_upgrade.forcelimit_2
	remove_province_modifier = DA_mechanics_upgrade.forcelimit_3
	remove_province_modifier = DA_mechanics_upgrade.forcelimit_4
	remove_province_modifier = DA_mechanics_upgrade.warforged_1
	remove_province_modifier = DA_mechanics_upgrade.warforged_2
	remove_province_modifier = DA_mechanics_upgrade.warforged_3
	remove_province_modifier = DA_mechanics_upgrade.warforged_4
	remove_province_modifier = DA_mechanics_upgrade.sailors_1
	remove_province_modifier = DA_mechanics_upgrade.sailors_2
	remove_province_modifier = DA_mechanics_upgrade.sailors_3
	remove_province_modifier = DA_mechanics_upgrade.sailors_4
	remove_province_modifier = DA_mechanics_upgrade.navy_forcelimit_1
	remove_province_modifier = DA_mechanics_upgrade.navy_forcelimit_2
	remove_province_modifier = DA_mechanics_upgrade.navy_forcelimit_3
	remove_province_modifier = DA_mechanics_upgrade.navy_forcelimit_4
	if = {
		limit = {
            OR = {
                has_building = DA_local_market
                has_building = marketplace
                has_building = trade_depot
                has_building = stock_exchange
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = trade_1
			upgrade_2 = trade_2
			upgrade_3 = trade_3
			upgrade_4 = trade_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_arcane_appraiser
                has_building = DA_arcane_tech_exchange
            }
		}
		DA_mechanics_upgrade_applier_1 = {
			upgrade_1 = appraiser_2
		}
	}
	if = {
		limit = {
            OR = {
                has_building = workshop
                has_building = counting_house
                has_building = DA_steam_workshop
                has_building = DA_electrical_workshop
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = workshop_1
			upgrade_2 = workshop_2
			upgrade_3 = workshop_3
			upgrade_4 = workshop_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_artisan_building_1
                has_building = DA_artisan_building_2
                has_building = DA_artisan_building_3
            }
		}
		DA_mechanics_upgrade_applier_1 = {
			upgrade_1 = artisan_2
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_assembler_building_1
                has_building = DA_assembler_building_2
                has_building = DA_assembler_building_3
            }
		}
		DA_mechanics_upgrade_applier_1 = {
			upgrade_1 = assembler_2
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_tax_building_1
                has_building = DA_tax_building_2
                has_building = DA_tax_building_3
                has_building = DA_tax_building_4
                has_building = DA_tax_building_5
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = tax_1
			upgrade_2 = tax_2
			upgrade_3 = tax_3
			upgrade_4 = tax_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = temple
                has_building = cathedral
                has_building = DA_religious_building_3
                has_building = DA_religious_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = religion_1
			upgrade_2 = religion_2
			upgrade_3 = religion_3
			upgrade_4 = religion_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_education_building_1
                has_building = DA_education_building_2
                has_building = DA_education_building_3
                has_building = university
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = education_1
			upgrade_2 = education_2
			upgrade_3 = education_3
			upgrade_4 = education_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = courthouse
                has_building = town_hall
                has_building = DA_government_building_3
                has_building = DA_government_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = government_1
			upgrade_2 = government_2
			upgrade_3 = government_3
			upgrade_4 = government_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_PS_1
                has_building = DA_PS_2
                has_building = DA_PS_3
                has_building = DA_PS_4
            }
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_steam_pipes
                has_building = DA_electricity_cables
            }
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_deposit_building_1
                has_building = DA_deposit_building_2
                has_building = DA_deposit_building_3
                has_building = DA_deposit_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = deposit_1
			upgrade_2 = deposit_2
			upgrade_3 = deposit_3
			upgrade_4 = deposit_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_road_building_1
                has_building = DA_road_building_2
                has_building = DA_road_building_3
                has_building = DA_road_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = road_1
			upgrade_2 = road_2
			upgrade_3 = road_3
			upgrade_4 = road_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = barracks
                has_building = training_fields
                has_building = DA_manpower_building_3
                has_building = DA_manpower_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = manpower_1
			upgrade_2 = manpower_2
			upgrade_3 = manpower_3
			upgrade_4 = manpower_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = conscription_center
                has_building = regimental_camp
                has_building = DA_forcelimit_building_3
                has_building = DA_forcelimit_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = forcelimit_1
			upgrade_2 = forcelimit_2
			upgrade_3 = forcelimit_3
			upgrade_4 = forcelimit_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = DA_warforged_building_1
                has_building = DA_warforged_building_2
                has_building = DA_warforged_building_3
                has_building = DA_warforged_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = warforged_1
			upgrade_2 = warforged_2
			upgrade_3 = warforged_3
			upgrade_4 = warforged_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = dock
                has_building = drydock
                has_building = DA_navy_sailors_building_3
                has_building = DA_navy_sailors_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = sailors_1
			upgrade_2 = sailors_2
			upgrade_3 = sailors_3
			upgrade_4 = sailors_4
		}
	}
	if = {
		limit = {
            OR = {
                has_building = shipyard
                has_building = grand_shipyard
                has_building = DA_navy_forcelimit_building_3
                has_building = DA_navy_forcelimit_building_4
            }
		}
		DA_mechanics_upgrade_applier_4 = {
			upgrade_1 = navy_forcelimit_1
			upgrade_2 = navy_forcelimit_2
			upgrade_3 = navy_forcelimit_3
			upgrade_4 = navy_forcelimit_4
		}
	}
}