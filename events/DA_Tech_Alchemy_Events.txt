
namespace = DA_Tech_Alchemy_event



country_event = {  # material selection event
	id = DA_Tech_Alchemy_event.1
	title = DA_Tech_Alchemy_event.1.t
	desc = DA_Tech_Alchemy_event.1.d
	picture = DA_Alchemy_material_image_eventPicture

	is_triggered_only = yes
	option = {
		name = DA_Alchemy_material.Ironroot
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Ironroot
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = strength
		}
	}


	option = {
		name = DA_Alchemy_material.Silverleaf
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Silverleaf
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = charisma
			DA_Alchemy_Prop_2 = wisdom
		}
	}


	option = {
		name = DA_Alchemy_material.Sageleaf
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Sageleaf
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = wisdom
			DA_Alchemy_Prop_2 = clarity
		}
	}


	option = {
		name = DA_Alchemy_material.Embergrass
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Embergrass
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = constitution
		}
	}


	option = {
		name = DA_Alchemy_material.Glowberry
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Glowberry
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = charisma
			DA_Alchemy_Prop_2 = clarity
		}
	}


	option = {
		name = DA_Alchemy_material.Duskfern
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Duskfern
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = wisdom
		}
	}


	option = {
		name = DA_Alchemy_material.Stormvine
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Stormvine
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = charisma
		}
	}


	option = {
		name = DA_Alchemy_material.Honeyroot
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Honeyroot
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = charisma
			DA_Alchemy_Prop_2 = mindfog
		}
	}


	option = {
		name = DA_Alchemy_material.Shadowmoss
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Shadowmoss
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = dexterity
		}
	}


	option = {
		name = DA_Alchemy_material.Golden_Thistle
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Golden_Thistle
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = charisma
			DA_Alchemy_Prop_2 = intelligence
		}
	}


	option = {
		name = DA_Alchemy_material.Bloodflower
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Bloodflower
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 1
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = dexterity
		}
	}


	option = {
		name = DA_Alchemy_material.Crypt_Shroom
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Crypt_Shroom
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = corruptable_heart
		}
	}


	option = {
		name = DA_Alchemy_material.Mandrake_Root
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Mandrake_Root
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = charisma
			DA_Alchemy_Prop_2 = unyielding_spirit
			DA_Alchemy_Prop_3 = battle_frenzy
		}
	}


	option = {
		name = DA_Alchemy_material.Basilisk_Fang
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Basilisk_Fang
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = iron_skin
			DA_Alchemy_Prop_3 = bloodthirst
		}
	}


	option = {
		name = DA_Alchemy_material.Azure_Lotus
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Azure_Lotus
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = wisdom
			DA_Alchemy_Prop_2 = vitality
			DA_Alchemy_Prop_3 = wanderer_lore
		}
	}


	option = {
		name = DA_Alchemy_material.Nightshade_Amethyst
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Nightshade_Amethyst
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = intelligence
			DA_Alchemy_Prop_2 = arcane_affinity
			DA_Alchemy_Prop_3 = hyperfocus
		}
	}


	option = {
		name = DA_Alchemy_material.Crimson_Thistle
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Crimson_Thistle
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = bloodthirst
			DA_Alchemy_Prop_3 = battle_frenzy
		}
	}


	option = {
		name = DA_Alchemy_material.Drasil_Bark
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Drasil_Bark
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = iron_skin
			DA_Alchemy_Prop_3 = battle_frenzy
		}
	}


	option = {
		name = DA_Alchemy_material.Fey_Amber
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Fey_Amber
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = charisma
			DA_Alchemy_Prop_2 = vitality
			DA_Alchemy_Prop_3 = unyielding_spirit
		}
	}


	option = {
		name = DA_Alchemy_material.Manticore_Quill
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Manticore_Quill
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = adaptive_combat
		}
	}


	option = {
		name = DA_Alchemy_material.Healing_Slimes
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Healing_Slimes
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = vitality
			DA_Alchemy_Prop_3 = genial_madness
		}
	}


	option = {
		name = DA_Alchemy_material.Hook_Horrors
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Hook_Horrors
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = night_veil
			DA_Alchemy_Prop_3 = bloodthirst
		}
	}


	option = {
		name = DA_Alchemy_material.Living_Crystals
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Living_Crystals
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = intelligence
			DA_Alchemy_Prop_2 = corruptable_heart
			DA_Alchemy_Prop_3 = architect_vision
		}
	}


	option = {
		name = DA_Alchemy_material.Ironweave_Skitterers_silk
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Ironweave_Skitterers_silk
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = clarity
			DA_Alchemy_Prop_2 = farsight
			DA_Alchemy_Prop_3 = architect_vision
		}
	}


	option = {
		name = DA_Alchemy_material.Logrhundr
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Logrhundr
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = genial_madness
			DA_Alchemy_Prop_3 = fanatic_fervor
		}
	}


	option = {
		name = DA_Alchemy_material.Purple_Worm_blood
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Purple_Worm_blood
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = architect_vision
			DA_Alchemy_Prop_3 = iron_skin
		}
	}


	option = {
		name = DA_Alchemy_material.Griffon_Feathers
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Griffon_Feathers
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = adaptive_combat
			DA_Alchemy_Prop_3 = battle_focus
		}
	}


	option = {
		name = DA_Alchemy_material.Tchoken_scales
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Tchoken_scales
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = iron_skin
			DA_Alchemy_Prop_3 = vitality
		}
	}


	option = {
		name = DA_Alchemy_material.Almiras
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Almiras
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = battle_frenzy
			DA_Alchemy_Prop_3 = bloodthirst
		}
	}


	option = {
		name = DA_Alchemy_material.Basmu
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Basmu
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = farsight
			DA_Alchemy_Prop_3 = beast_instinct
		}
	}


	option = {
		name = DA_Alchemy_material.Chamrus
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Chamrus
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = intelligence
			DA_Alchemy_Prop_2 = arcane_affinity
			DA_Alchemy_Prop_3 = adaptive_combat
		}
	}


	option = {
		name = DA_Alchemy_material.Umu_Dabrutu
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Umu_Dabrutu
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = clarity
			DA_Alchemy_Prop_2 = battle_focus
			DA_Alchemy_Prop_3 = adaptive_combat
		}
	}


	option = {
		name = DA_Alchemy_material.Asigallu
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Asigallu
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = fanatic_fervor
			DA_Alchemy_Prop_3 = corruptable_heart
		}
	}


	option = {
		name = DA_Alchemy_material.Girtablullu
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Girtablullu
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = iron_skin
			DA_Alchemy_Prop_3 = beast_instinct
		}
	}


	option = {
		name = DA_Alchemy_material.Kusarikku
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Kusarikku
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = battle_focus
			DA_Alchemy_Prop_3 = vitality
		}
	}


	option = {
		name = DA_Alchemy_material.Sibargal
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Sibargal
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = iron_skin
			DA_Alchemy_Prop_3 = fanatic_fervor
		}
	}


	option = {
		name = DA_Alchemy_material.The_Last_Wish
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.The_Last_Wish
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = corruptable_heart
			DA_Alchemy_Prop_3 = genial_madness
		}
	}


	option = {
		name = DA_Alchemy_material.Hattiatia
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Hattiatia
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = arcane_affinity
			DA_Alchemy_Prop_3 = night_veil
		}
	}


	option = {
		name = DA_Alchemy_material.Almruk_Spikes
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Almruk_Spikes
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Kircha_Ot_laf
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Kircha_Ot_laf
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = clarity
			DA_Alchemy_Prop_2 = battle_focus
			DA_Alchemy_Prop_3 = hyperfocus
		}
	}


	option = {
		name = DA_Alchemy_material.Rock_Crab_legs
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Rock_Crab_legs
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = iron_skin
			DA_Alchemy_Prop_3 = vitality
		}
	}


	option = {
		name = DA_Alchemy_material.Roc_feathers
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Roc_feathers
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = hyperfocus
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Dire_Hyena_tooth
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Dire_Hyena_tooth
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = battle_frenzy
			DA_Alchemy_Prop_3 = beast_instinct
		}
	}


	option = {
		name = DA_Alchemy_material.Barzoazh_blood
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Barzoazh_blood
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = vitality
			DA_Alchemy_Prop_3 = unyielding_spirit
		}
	}


	option = {
		name = DA_Alchemy_material.Bo_hide
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Bo_hide
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = night_veil
			DA_Alchemy_Prop_3 = battle_frenzy
		}
	}


	option = {
		name = DA_Alchemy_material.Shadhavar_horns
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Shadhavar_horns
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = wisdom
			DA_Alchemy_Prop_2 = wanderer_lore
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Tlalusk_Tusks
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Tlalusk_Tusks
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = vitality
			DA_Alchemy_Prop_3 = iron_skin
		}
	}


	option = {
		name = DA_Alchemy_material.elemental_fire
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.elemental_fire
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.elemental_water
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.elemental_water
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.elemental_air
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.elemental_air
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.elemental_earth
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.elemental_earth
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Guiamala
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Guiamala
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Eloko
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Eloko
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Kadda
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Kadda
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Devouring_Gourd
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Devouring_Gourd
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Asanbosam
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Asanbosam
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Hydras
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Hydras
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Ninki_Nanka
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Ninki_Nanka
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Aziza
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Aziza
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Abada
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Abada
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Were_Leopard
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Were_Leopard
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Rom
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Rom
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Adze
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Adze
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 2
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = farsight
		}
	}


	option = {
		name = DA_Alchemy_material.Heart_of_the_World
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Heart_of_the_World
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = vitality
			DA_Alchemy_Prop_3 = hyperfocus
			DA_Alchemy_Prop_4 = Hyper_Regeneration
		}
	}


	option = {
		name = DA_Alchemy_material.Black_Sun_Shard
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Black_Sun_Shard
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = mindfog
			DA_Alchemy_Prop_2 = corruptable_heart
			DA_Alchemy_Prop_3 = genial_madness
			DA_Alchemy_Prop_4 = demonic_charm
		}
	}


	option = {
		name = DA_Alchemy_material.Leviathan_Scales
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Leviathan_Scales
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = wisdom
			DA_Alchemy_Prop_2 = beast_instinct
			DA_Alchemy_Prop_3 = water_affinity
			DA_Alchemy_Prop_4 = leviathan
		}
	}


	option = {
		name = DA_Alchemy_material.Phoenix_Feather
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Phoenix_Feather
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = dexterity
			DA_Alchemy_Prop_2 = unyielding_spirit
			DA_Alchemy_Prop_3 = fire_affinity
			DA_Alchemy_Prop_4 = rejuvenation
		}
	}


	option = {
		name = DA_Alchemy_material.Starheart_Core
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Starheart_Core
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = iron_skin
			DA_Alchemy_Prop_3 = earth_affinity
			DA_Alchemy_Prop_4 = unbreakable
		}
	}


	option = {
		name = DA_Alchemy_material.Whispering_Crown
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Whispering_Crown
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = charisma
			DA_Alchemy_Prop_2 = wanderer_lore
			DA_Alchemy_Prop_3 = air_affinity
			DA_Alchemy_Prop_4 = Whispers_of_eternity
		}
	}


	option = {
		name = DA_Alchemy_material.Dragon_remains
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Dragon_remains
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = strength
			DA_Alchemy_Prop_2 = arcane_affinity
			DA_Alchemy_Prop_3 = iron_skin
			DA_Alchemy_Prop_4 = draconic_power
		}
	}


	option = {
		name = DA_Alchemy_material.Giant_remains
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Giant_remains
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = constitution
			DA_Alchemy_Prop_2 = iron_skin
			DA_Alchemy_Prop_3 = vitality
			DA_Alchemy_Prop_4 = giant_power
		}
	}


	option = {
		name = DA_Alchemy_material.Lich_remains
		trigger = {
			any_owned_province = {
				has_province_modifier = DA_Alchemy_material.Lich_remains
			}
		}
		DA_apply_Alchemy_Material = {
			DA_Toxicity = 3
			DA_Alchemy_Prop_1 = intelligence
			DA_Alchemy_Prop_2 = arcane_affinity
			DA_Alchemy_Prop_3 = genial_madness
			DA_Alchemy_Prop_4 = lich_power
		}
	}


	option = {
		name = DA_adk.10.Go_back
		hidden_effect = {
			subtract_variable = {
				which = DA_alchemy_slot
				value = 1
			}
		}
	}
	after = {
		hidden_effect = {
			clr_country_flag = DA_alchemy_in_use
			change_variable = {
				which = DA_alchemy_slot
				value = 1
			}
		}
	}
}

#########################################################
#########################################################
#########################################################

country_event = {
	id = DA_Tech_Alchemy_event.2	#start production
	title = DA_Tech_Alchemy_event.2.t
	desc = DA_Tech_Alchemy_event.2.d
	picture = DA_Alchemy_material_image_eventPicture

	is_triggered_only = yes

	option = {
		name = DA_Tech_Alchemy_event.2.a
		add_country_modifier = {
			name = DA_Alchemy_starting_production
			duration = 365
		}
		country_event = {
			id = DA_Tech_Alchemy_event.3
			days = 365
		}
	}
}

country_event = {
	id = DA_Tech_Alchemy_event.3	# apply modifers
	title = DA_Tech_Alchemy_event.3.t
	desc = DA_Tech_Alchemy_event.3.d
	picture = DA_Alchemy_material_image_eventPicture

	is_triggered_only = yes

	option = {
		name = DA_Tech_Alchemy_event.3.a
		add_country_modifier = {
			name = DA_Alchemy_in_production
			duration = -1
		}
		DA_give_alchemy_toxicity_modifier_effect = yes
		DA_give_final_alchemy_modifiers_effect = yes
		country_event = {
			id = DA_Tech_Alchemy_event.4
			days = 1460
		}
	}
}

country_event = {
	id = DA_Tech_Alchemy_event.4	# stop or continue
	title = DA_Tech_Alchemy_event.4.t
	desc = DA_Tech_Alchemy_event.4.d
	picture = DA_Alchemy_material_image_eventPicture

	is_triggered_only = yes

	option = {
		name = DA_Tech_Alchemy_event.4.stop
		custom_tooltip = DA_remove_alchemy_modifiers_effect_tt
		hidden_effect = {
			DA_remove_alchemy_modifiers_effect = yes
			DA_remove_toxicity_modifiers_effect = yes
			clr_country_flag = DA_alchemy_in_use
			DA_reset_Alchemy_Variables = yes
		}
		remove_country_modifier = DA_Alchemy_in_production
	}
	option = {
		name = DA_Tech_Alchemy_event.4.continue
		custom_tooltip = DA_continue_producing_alchemy_tt
		DA_alchemy_increase_toxicity_effect = {
			DA_amount = 2
		}
		country_event = {
			id = DA_Tech_Alchemy_event.4
			days = 730
		}
	}
}